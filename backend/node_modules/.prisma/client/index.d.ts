
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Escola
 * 
 */
export type Escola = $Result.DefaultSelection<Prisma.$EscolaPayload>
/**
 * Model Matricula
 * 
 */
export type Matricula = $Result.DefaultSelection<Prisma.$MatriculaPayload>
/**
 * Model Curso
 * 
 */
export type Curso = $Result.DefaultSelection<Prisma.$CursoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.escola`: Exposes CRUD operations for the **Escola** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Escolas
    * const escolas = await prisma.escola.findMany()
    * ```
    */
  get escola(): Prisma.EscolaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.matricula`: Exposes CRUD operations for the **Matricula** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Matriculas
    * const matriculas = await prisma.matricula.findMany()
    * ```
    */
  get matricula(): Prisma.MatriculaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.curso`: Exposes CRUD operations for the **Curso** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cursos
    * const cursos = await prisma.curso.findMany()
    * ```
    */
  get curso(): Prisma.CursoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Escola: 'Escola',
    Matricula: 'Matricula',
    Curso: 'Curso'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "escola" | "matricula" | "curso"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Escola: {
        payload: Prisma.$EscolaPayload<ExtArgs>
        fields: Prisma.EscolaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EscolaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EscolaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          findFirst: {
            args: Prisma.EscolaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EscolaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          findMany: {
            args: Prisma.EscolaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>[]
          }
          create: {
            args: Prisma.EscolaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          createMany: {
            args: Prisma.EscolaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EscolaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>[]
          }
          delete: {
            args: Prisma.EscolaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          update: {
            args: Prisma.EscolaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          deleteMany: {
            args: Prisma.EscolaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EscolaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EscolaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>[]
          }
          upsert: {
            args: Prisma.EscolaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EscolaPayload>
          }
          aggregate: {
            args: Prisma.EscolaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEscola>
          }
          groupBy: {
            args: Prisma.EscolaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EscolaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EscolaCountArgs<ExtArgs>
            result: $Utils.Optional<EscolaCountAggregateOutputType> | number
          }
        }
      }
      Matricula: {
        payload: Prisma.$MatriculaPayload<ExtArgs>
        fields: Prisma.MatriculaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MatriculaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MatriculaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          findFirst: {
            args: Prisma.MatriculaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MatriculaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          findMany: {
            args: Prisma.MatriculaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>[]
          }
          create: {
            args: Prisma.MatriculaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          createMany: {
            args: Prisma.MatriculaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MatriculaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>[]
          }
          delete: {
            args: Prisma.MatriculaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          update: {
            args: Prisma.MatriculaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          deleteMany: {
            args: Prisma.MatriculaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MatriculaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MatriculaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>[]
          }
          upsert: {
            args: Prisma.MatriculaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MatriculaPayload>
          }
          aggregate: {
            args: Prisma.MatriculaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMatricula>
          }
          groupBy: {
            args: Prisma.MatriculaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MatriculaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MatriculaCountArgs<ExtArgs>
            result: $Utils.Optional<MatriculaCountAggregateOutputType> | number
          }
        }
      }
      Curso: {
        payload: Prisma.$CursoPayload<ExtArgs>
        fields: Prisma.CursoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CursoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CursoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findFirst: {
            args: Prisma.CursoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CursoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          findMany: {
            args: Prisma.CursoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          create: {
            args: Prisma.CursoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          createMany: {
            args: Prisma.CursoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CursoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          delete: {
            args: Prisma.CursoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          update: {
            args: Prisma.CursoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          deleteMany: {
            args: Prisma.CursoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CursoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CursoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>[]
          }
          upsert: {
            args: Prisma.CursoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CursoPayload>
          }
          aggregate: {
            args: Prisma.CursoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCurso>
          }
          groupBy: {
            args: Prisma.CursoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CursoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CursoCountArgs<ExtArgs>
            result: $Utils.Optional<CursoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    escola?: EscolaOmit
    matricula?: MatriculaOmit
    curso?: CursoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    escolasResponsavel: number
    matriculas: number
    cursosInstrutor: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escolasResponsavel?: boolean | UserCountOutputTypeCountEscolasResponsavelArgs
    matriculas?: boolean | UserCountOutputTypeCountMatriculasArgs
    cursosInstrutor?: boolean | UserCountOutputTypeCountCursosInstrutorArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountEscolasResponsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscolaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMatriculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatriculaWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCursosInstrutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
  }


  /**
   * Count Type EscolaCountOutputType
   */

  export type EscolaCountOutputType = {
    users: number
    matriculas: number
  }

  export type EscolaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | EscolaCountOutputTypeCountUsersArgs
    matriculas?: boolean | EscolaCountOutputTypeCountMatriculasArgs
  }

  // Custom InputTypes
  /**
   * EscolaCountOutputType without action
   */
  export type EscolaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EscolaCountOutputType
     */
    select?: EscolaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EscolaCountOutputType without action
   */
  export type EscolaCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * EscolaCountOutputType without action
   */
  export type EscolaCountOutputTypeCountMatriculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatriculaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    escolaId: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    escolaId: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    login: string | null
    password: string | null
    tipoUser: string | null
    rg: string | null
    cpf: string | null
    dataNascimento: string | null
    estadoCivil: string | null
    cnpj: string | null
    ie: string | null
    whatsapp: string | null
    telefone: string | null
    empresaAtuacao: string | null
    profissao: string | null
    endCidadeEstado: string | null
    endRua: string | null
    endNum: string | null
    endCep: string | null
    descricao: string | null
    fotoPerfil: string | null
    escolaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    login: string | null
    password: string | null
    tipoUser: string | null
    rg: string | null
    cpf: string | null
    dataNascimento: string | null
    estadoCivil: string | null
    cnpj: string | null
    ie: string | null
    whatsapp: string | null
    telefone: string | null
    empresaAtuacao: string | null
    profissao: string | null
    endCidadeEstado: string | null
    endRua: string | null
    endNum: string | null
    endCep: string | null
    descricao: string | null
    fotoPerfil: string | null
    escolaId: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    login: number
    password: number
    tipoUser: number
    rg: number
    cpf: number
    dataNascimento: number
    estadoCivil: number
    cnpj: number
    ie: number
    whatsapp: number
    telefone: number
    empresaAtuacao: number
    profissao: number
    endCidadeEstado: number
    endRua: number
    endNum: number
    endCep: number
    descricao: number
    fotoPerfil: number
    escolaId: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    escolaId?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    escolaId?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    login?: true
    password?: true
    tipoUser?: true
    rg?: true
    cpf?: true
    dataNascimento?: true
    estadoCivil?: true
    cnpj?: true
    ie?: true
    whatsapp?: true
    telefone?: true
    empresaAtuacao?: true
    profissao?: true
    endCidadeEstado?: true
    endRua?: true
    endNum?: true
    endCep?: true
    descricao?: true
    fotoPerfil?: true
    escolaId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    login?: true
    password?: true
    tipoUser?: true
    rg?: true
    cpf?: true
    dataNascimento?: true
    estadoCivil?: true
    cnpj?: true
    ie?: true
    whatsapp?: true
    telefone?: true
    empresaAtuacao?: true
    profissao?: true
    endCidadeEstado?: true
    endRua?: true
    endNum?: true
    endCep?: true
    descricao?: true
    fotoPerfil?: true
    escolaId?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    login?: true
    password?: true
    tipoUser?: true
    rg?: true
    cpf?: true
    dataNascimento?: true
    estadoCivil?: true
    cnpj?: true
    ie?: true
    whatsapp?: true
    telefone?: true
    empresaAtuacao?: true
    profissao?: true
    endCidadeEstado?: true
    endRua?: true
    endNum?: true
    endCep?: true
    descricao?: true
    fotoPerfil?: true
    escolaId?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg: string | null
    cpf: string
    dataNascimento: string
    estadoCivil: string | null
    cnpj: string | null
    ie: string | null
    whatsapp: string | null
    telefone: string | null
    empresaAtuacao: string | null
    profissao: string | null
    endCidadeEstado: string | null
    endRua: string | null
    endNum: string | null
    endCep: string | null
    descricao: string | null
    fotoPerfil: string | null
    escolaId: number | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    login?: boolean
    password?: boolean
    tipoUser?: boolean
    rg?: boolean
    cpf?: boolean
    dataNascimento?: boolean
    estadoCivil?: boolean
    cnpj?: boolean
    ie?: boolean
    whatsapp?: boolean
    telefone?: boolean
    empresaAtuacao?: boolean
    profissao?: boolean
    endCidadeEstado?: boolean
    endRua?: boolean
    endNum?: boolean
    endCep?: boolean
    descricao?: boolean
    fotoPerfil?: boolean
    escolaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    escola?: boolean | User$escolaArgs<ExtArgs>
    escolasResponsavel?: boolean | User$escolasResponsavelArgs<ExtArgs>
    matriculas?: boolean | User$matriculasArgs<ExtArgs>
    cursosInstrutor?: boolean | User$cursosInstrutorArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    login?: boolean
    password?: boolean
    tipoUser?: boolean
    rg?: boolean
    cpf?: boolean
    dataNascimento?: boolean
    estadoCivil?: boolean
    cnpj?: boolean
    ie?: boolean
    whatsapp?: boolean
    telefone?: boolean
    empresaAtuacao?: boolean
    profissao?: boolean
    endCidadeEstado?: boolean
    endRua?: boolean
    endNum?: boolean
    endCep?: boolean
    descricao?: boolean
    fotoPerfil?: boolean
    escolaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    escola?: boolean | User$escolaArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    login?: boolean
    password?: boolean
    tipoUser?: boolean
    rg?: boolean
    cpf?: boolean
    dataNascimento?: boolean
    estadoCivil?: boolean
    cnpj?: boolean
    ie?: boolean
    whatsapp?: boolean
    telefone?: boolean
    empresaAtuacao?: boolean
    profissao?: boolean
    endCidadeEstado?: boolean
    endRua?: boolean
    endNum?: boolean
    endCep?: boolean
    descricao?: boolean
    fotoPerfil?: boolean
    escolaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    escola?: boolean | User$escolaArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    login?: boolean
    password?: boolean
    tipoUser?: boolean
    rg?: boolean
    cpf?: boolean
    dataNascimento?: boolean
    estadoCivil?: boolean
    cnpj?: boolean
    ie?: boolean
    whatsapp?: boolean
    telefone?: boolean
    empresaAtuacao?: boolean
    profissao?: boolean
    endCidadeEstado?: boolean
    endRua?: boolean
    endNum?: boolean
    endCep?: boolean
    descricao?: boolean
    fotoPerfil?: boolean
    escolaId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "email" | "login" | "password" | "tipoUser" | "rg" | "cpf" | "dataNascimento" | "estadoCivil" | "cnpj" | "ie" | "whatsapp" | "telefone" | "empresaAtuacao" | "profissao" | "endCidadeEstado" | "endRua" | "endNum" | "endCep" | "descricao" | "fotoPerfil" | "escolaId" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escola?: boolean | User$escolaArgs<ExtArgs>
    escolasResponsavel?: boolean | User$escolasResponsavelArgs<ExtArgs>
    matriculas?: boolean | User$matriculasArgs<ExtArgs>
    cursosInstrutor?: boolean | User$cursosInstrutorArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escola?: boolean | User$escolaArgs<ExtArgs>
  }
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    escola?: boolean | User$escolaArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      escola: Prisma.$EscolaPayload<ExtArgs> | null
      escolasResponsavel: Prisma.$EscolaPayload<ExtArgs>[]
      matriculas: Prisma.$MatriculaPayload<ExtArgs>[]
      cursosInstrutor: Prisma.$CursoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string
      login: string
      password: string
      tipoUser: string
      rg: string | null
      cpf: string
      dataNascimento: string
      estadoCivil: string | null
      cnpj: string | null
      ie: string | null
      whatsapp: string | null
      telefone: string | null
      empresaAtuacao: string | null
      profissao: string | null
      endCidadeEstado: string | null
      endRua: string | null
      endNum: string | null
      endCep: string | null
      descricao: string | null
      fotoPerfil: string | null
      escolaId: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    escola<T extends User$escolaArgs<ExtArgs> = {}>(args?: Subset<T, User$escolaArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    escolasResponsavel<T extends User$escolasResponsavelArgs<ExtArgs> = {}>(args?: Subset<T, User$escolasResponsavelArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    matriculas<T extends User$matriculasArgs<ExtArgs> = {}>(args?: Subset<T, User$matriculasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cursosInstrutor<T extends User$cursosInstrutorArgs<ExtArgs> = {}>(args?: Subset<T, User$cursosInstrutorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly nome: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly login: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly tipoUser: FieldRef<"User", 'String'>
    readonly rg: FieldRef<"User", 'String'>
    readonly cpf: FieldRef<"User", 'String'>
    readonly dataNascimento: FieldRef<"User", 'String'>
    readonly estadoCivil: FieldRef<"User", 'String'>
    readonly cnpj: FieldRef<"User", 'String'>
    readonly ie: FieldRef<"User", 'String'>
    readonly whatsapp: FieldRef<"User", 'String'>
    readonly telefone: FieldRef<"User", 'String'>
    readonly empresaAtuacao: FieldRef<"User", 'String'>
    readonly profissao: FieldRef<"User", 'String'>
    readonly endCidadeEstado: FieldRef<"User", 'String'>
    readonly endRua: FieldRef<"User", 'String'>
    readonly endNum: FieldRef<"User", 'String'>
    readonly endCep: FieldRef<"User", 'String'>
    readonly descricao: FieldRef<"User", 'String'>
    readonly fotoPerfil: FieldRef<"User", 'String'>
    readonly escolaId: FieldRef<"User", 'Int'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.escola
   */
  export type User$escolaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    where?: EscolaWhereInput
  }

  /**
   * User.escolasResponsavel
   */
  export type User$escolasResponsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    where?: EscolaWhereInput
    orderBy?: EscolaOrderByWithRelationInput | EscolaOrderByWithRelationInput[]
    cursor?: EscolaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EscolaScalarFieldEnum | EscolaScalarFieldEnum[]
  }

  /**
   * User.matriculas
   */
  export type User$matriculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    where?: MatriculaWhereInput
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    cursor?: MatriculaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MatriculaScalarFieldEnum | MatriculaScalarFieldEnum[]
  }

  /**
   * User.cursosInstrutor
   */
  export type User$cursosInstrutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    cursor?: CursoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Escola
   */

  export type AggregateEscola = {
    _count: EscolaCountAggregateOutputType | null
    _avg: EscolaAvgAggregateOutputType | null
    _sum: EscolaSumAggregateOutputType | null
    _min: EscolaMinAggregateOutputType | null
    _max: EscolaMaxAggregateOutputType | null
  }

  export type EscolaAvgAggregateOutputType = {
    id: number | null
    responsavelId: number | null
  }

  export type EscolaSumAggregateOutputType = {
    id: number | null
    responsavelId: number | null
  }

  export type EscolaMinAggregateOutputType = {
    id: number | null
    nome: string | null
    dataCadastro: Date | null
    responsavelId: number | null
    cidade: string | null
    bairro: string | null
    estado: string | null
    rua: string | null
    numero: string | null
    descricao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EscolaMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    dataCadastro: Date | null
    responsavelId: number | null
    cidade: string | null
    bairro: string | null
    estado: string | null
    rua: string | null
    numero: string | null
    descricao: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EscolaCountAggregateOutputType = {
    id: number
    nome: number
    dataCadastro: number
    responsavelId: number
    cidade: number
    bairro: number
    estado: number
    rua: number
    numero: number
    descricao: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EscolaAvgAggregateInputType = {
    id?: true
    responsavelId?: true
  }

  export type EscolaSumAggregateInputType = {
    id?: true
    responsavelId?: true
  }

  export type EscolaMinAggregateInputType = {
    id?: true
    nome?: true
    dataCadastro?: true
    responsavelId?: true
    cidade?: true
    bairro?: true
    estado?: true
    rua?: true
    numero?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EscolaMaxAggregateInputType = {
    id?: true
    nome?: true
    dataCadastro?: true
    responsavelId?: true
    cidade?: true
    bairro?: true
    estado?: true
    rua?: true
    numero?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EscolaCountAggregateInputType = {
    id?: true
    nome?: true
    dataCadastro?: true
    responsavelId?: true
    cidade?: true
    bairro?: true
    estado?: true
    rua?: true
    numero?: true
    descricao?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EscolaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Escola to aggregate.
     */
    where?: EscolaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escolas to fetch.
     */
    orderBy?: EscolaOrderByWithRelationInput | EscolaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EscolaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escolas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escolas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Escolas
    **/
    _count?: true | EscolaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EscolaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EscolaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EscolaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EscolaMaxAggregateInputType
  }

  export type GetEscolaAggregateType<T extends EscolaAggregateArgs> = {
        [P in keyof T & keyof AggregateEscola]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEscola[P]>
      : GetScalarType<T[P], AggregateEscola[P]>
  }




  export type EscolaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EscolaWhereInput
    orderBy?: EscolaOrderByWithAggregationInput | EscolaOrderByWithAggregationInput[]
    by: EscolaScalarFieldEnum[] | EscolaScalarFieldEnum
    having?: EscolaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EscolaCountAggregateInputType | true
    _avg?: EscolaAvgAggregateInputType
    _sum?: EscolaSumAggregateInputType
    _min?: EscolaMinAggregateInputType
    _max?: EscolaMaxAggregateInputType
  }

  export type EscolaGroupByOutputType = {
    id: number
    nome: string
    dataCadastro: Date
    responsavelId: number | null
    cidade: string | null
    bairro: string | null
    estado: string | null
    rua: string | null
    numero: string | null
    descricao: string | null
    createdAt: Date
    updatedAt: Date
    _count: EscolaCountAggregateOutputType | null
    _avg: EscolaAvgAggregateOutputType | null
    _sum: EscolaSumAggregateOutputType | null
    _min: EscolaMinAggregateOutputType | null
    _max: EscolaMaxAggregateOutputType | null
  }

  type GetEscolaGroupByPayload<T extends EscolaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EscolaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EscolaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EscolaGroupByOutputType[P]>
            : GetScalarType<T[P], EscolaGroupByOutputType[P]>
        }
      >
    >


  export type EscolaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    dataCadastro?: boolean
    responsavelId?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    rua?: boolean
    numero?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
    users?: boolean | Escola$usersArgs<ExtArgs>
    matriculas?: boolean | Escola$matriculasArgs<ExtArgs>
    _count?: boolean | EscolaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["escola"]>

  export type EscolaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    dataCadastro?: boolean
    responsavelId?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    rua?: boolean
    numero?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
  }, ExtArgs["result"]["escola"]>

  export type EscolaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    dataCadastro?: boolean
    responsavelId?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    rua?: boolean
    numero?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
  }, ExtArgs["result"]["escola"]>

  export type EscolaSelectScalar = {
    id?: boolean
    nome?: boolean
    dataCadastro?: boolean
    responsavelId?: boolean
    cidade?: boolean
    bairro?: boolean
    estado?: boolean
    rua?: boolean
    numero?: boolean
    descricao?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EscolaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nome" | "dataCadastro" | "responsavelId" | "cidade" | "bairro" | "estado" | "rua" | "numero" | "descricao" | "createdAt" | "updatedAt", ExtArgs["result"]["escola"]>
  export type EscolaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
    users?: boolean | Escola$usersArgs<ExtArgs>
    matriculas?: boolean | Escola$matriculasArgs<ExtArgs>
    _count?: boolean | EscolaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EscolaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
  }
  export type EscolaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    responsavel?: boolean | Escola$responsavelArgs<ExtArgs>
  }

  export type $EscolaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Escola"
    objects: {
      responsavel: Prisma.$UserPayload<ExtArgs> | null
      users: Prisma.$UserPayload<ExtArgs>[]
      matriculas: Prisma.$MatriculaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      dataCadastro: Date
      responsavelId: number | null
      cidade: string | null
      bairro: string | null
      estado: string | null
      rua: string | null
      numero: string | null
      descricao: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["escola"]>
    composites: {}
  }

  type EscolaGetPayload<S extends boolean | null | undefined | EscolaDefaultArgs> = $Result.GetResult<Prisma.$EscolaPayload, S>

  type EscolaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EscolaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EscolaCountAggregateInputType | true
    }

  export interface EscolaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Escola'], meta: { name: 'Escola' } }
    /**
     * Find zero or one Escola that matches the filter.
     * @param {EscolaFindUniqueArgs} args - Arguments to find a Escola
     * @example
     * // Get one Escola
     * const escola = await prisma.escola.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EscolaFindUniqueArgs>(args: SelectSubset<T, EscolaFindUniqueArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Escola that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EscolaFindUniqueOrThrowArgs} args - Arguments to find a Escola
     * @example
     * // Get one Escola
     * const escola = await prisma.escola.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EscolaFindUniqueOrThrowArgs>(args: SelectSubset<T, EscolaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Escola that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaFindFirstArgs} args - Arguments to find a Escola
     * @example
     * // Get one Escola
     * const escola = await prisma.escola.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EscolaFindFirstArgs>(args?: SelectSubset<T, EscolaFindFirstArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Escola that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaFindFirstOrThrowArgs} args - Arguments to find a Escola
     * @example
     * // Get one Escola
     * const escola = await prisma.escola.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EscolaFindFirstOrThrowArgs>(args?: SelectSubset<T, EscolaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Escolas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Escolas
     * const escolas = await prisma.escola.findMany()
     * 
     * // Get first 10 Escolas
     * const escolas = await prisma.escola.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const escolaWithIdOnly = await prisma.escola.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EscolaFindManyArgs>(args?: SelectSubset<T, EscolaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Escola.
     * @param {EscolaCreateArgs} args - Arguments to create a Escola.
     * @example
     * // Create one Escola
     * const Escola = await prisma.escola.create({
     *   data: {
     *     // ... data to create a Escola
     *   }
     * })
     * 
     */
    create<T extends EscolaCreateArgs>(args: SelectSubset<T, EscolaCreateArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Escolas.
     * @param {EscolaCreateManyArgs} args - Arguments to create many Escolas.
     * @example
     * // Create many Escolas
     * const escola = await prisma.escola.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EscolaCreateManyArgs>(args?: SelectSubset<T, EscolaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Escolas and returns the data saved in the database.
     * @param {EscolaCreateManyAndReturnArgs} args - Arguments to create many Escolas.
     * @example
     * // Create many Escolas
     * const escola = await prisma.escola.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Escolas and only return the `id`
     * const escolaWithIdOnly = await prisma.escola.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EscolaCreateManyAndReturnArgs>(args?: SelectSubset<T, EscolaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Escola.
     * @param {EscolaDeleteArgs} args - Arguments to delete one Escola.
     * @example
     * // Delete one Escola
     * const Escola = await prisma.escola.delete({
     *   where: {
     *     // ... filter to delete one Escola
     *   }
     * })
     * 
     */
    delete<T extends EscolaDeleteArgs>(args: SelectSubset<T, EscolaDeleteArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Escola.
     * @param {EscolaUpdateArgs} args - Arguments to update one Escola.
     * @example
     * // Update one Escola
     * const escola = await prisma.escola.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EscolaUpdateArgs>(args: SelectSubset<T, EscolaUpdateArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Escolas.
     * @param {EscolaDeleteManyArgs} args - Arguments to filter Escolas to delete.
     * @example
     * // Delete a few Escolas
     * const { count } = await prisma.escola.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EscolaDeleteManyArgs>(args?: SelectSubset<T, EscolaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Escolas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Escolas
     * const escola = await prisma.escola.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EscolaUpdateManyArgs>(args: SelectSubset<T, EscolaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Escolas and returns the data updated in the database.
     * @param {EscolaUpdateManyAndReturnArgs} args - Arguments to update many Escolas.
     * @example
     * // Update many Escolas
     * const escola = await prisma.escola.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Escolas and only return the `id`
     * const escolaWithIdOnly = await prisma.escola.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EscolaUpdateManyAndReturnArgs>(args: SelectSubset<T, EscolaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Escola.
     * @param {EscolaUpsertArgs} args - Arguments to update or create a Escola.
     * @example
     * // Update or create a Escola
     * const escola = await prisma.escola.upsert({
     *   create: {
     *     // ... data to create a Escola
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Escola we want to update
     *   }
     * })
     */
    upsert<T extends EscolaUpsertArgs>(args: SelectSubset<T, EscolaUpsertArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Escolas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaCountArgs} args - Arguments to filter Escolas to count.
     * @example
     * // Count the number of Escolas
     * const count = await prisma.escola.count({
     *   where: {
     *     // ... the filter for the Escolas we want to count
     *   }
     * })
    **/
    count<T extends EscolaCountArgs>(
      args?: Subset<T, EscolaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EscolaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Escola.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EscolaAggregateArgs>(args: Subset<T, EscolaAggregateArgs>): Prisma.PrismaPromise<GetEscolaAggregateType<T>>

    /**
     * Group by Escola.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EscolaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EscolaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EscolaGroupByArgs['orderBy'] }
        : { orderBy?: EscolaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EscolaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEscolaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Escola model
   */
  readonly fields: EscolaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Escola.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EscolaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    responsavel<T extends Escola$responsavelArgs<ExtArgs> = {}>(args?: Subset<T, Escola$responsavelArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends Escola$usersArgs<ExtArgs> = {}>(args?: Subset<T, Escola$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    matriculas<T extends Escola$matriculasArgs<ExtArgs> = {}>(args?: Subset<T, Escola$matriculasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Escola model
   */
  interface EscolaFieldRefs {
    readonly id: FieldRef<"Escola", 'Int'>
    readonly nome: FieldRef<"Escola", 'String'>
    readonly dataCadastro: FieldRef<"Escola", 'DateTime'>
    readonly responsavelId: FieldRef<"Escola", 'Int'>
    readonly cidade: FieldRef<"Escola", 'String'>
    readonly bairro: FieldRef<"Escola", 'String'>
    readonly estado: FieldRef<"Escola", 'String'>
    readonly rua: FieldRef<"Escola", 'String'>
    readonly numero: FieldRef<"Escola", 'String'>
    readonly descricao: FieldRef<"Escola", 'String'>
    readonly createdAt: FieldRef<"Escola", 'DateTime'>
    readonly updatedAt: FieldRef<"Escola", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Escola findUnique
   */
  export type EscolaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter, which Escola to fetch.
     */
    where: EscolaWhereUniqueInput
  }

  /**
   * Escola findUniqueOrThrow
   */
  export type EscolaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter, which Escola to fetch.
     */
    where: EscolaWhereUniqueInput
  }

  /**
   * Escola findFirst
   */
  export type EscolaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter, which Escola to fetch.
     */
    where?: EscolaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escolas to fetch.
     */
    orderBy?: EscolaOrderByWithRelationInput | EscolaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Escolas.
     */
    cursor?: EscolaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escolas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escolas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Escolas.
     */
    distinct?: EscolaScalarFieldEnum | EscolaScalarFieldEnum[]
  }

  /**
   * Escola findFirstOrThrow
   */
  export type EscolaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter, which Escola to fetch.
     */
    where?: EscolaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escolas to fetch.
     */
    orderBy?: EscolaOrderByWithRelationInput | EscolaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Escolas.
     */
    cursor?: EscolaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escolas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escolas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Escolas.
     */
    distinct?: EscolaScalarFieldEnum | EscolaScalarFieldEnum[]
  }

  /**
   * Escola findMany
   */
  export type EscolaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter, which Escolas to fetch.
     */
    where?: EscolaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Escolas to fetch.
     */
    orderBy?: EscolaOrderByWithRelationInput | EscolaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Escolas.
     */
    cursor?: EscolaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Escolas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Escolas.
     */
    skip?: number
    distinct?: EscolaScalarFieldEnum | EscolaScalarFieldEnum[]
  }

  /**
   * Escola create
   */
  export type EscolaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * The data needed to create a Escola.
     */
    data: XOR<EscolaCreateInput, EscolaUncheckedCreateInput>
  }

  /**
   * Escola createMany
   */
  export type EscolaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Escolas.
     */
    data: EscolaCreateManyInput | EscolaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Escola createManyAndReturn
   */
  export type EscolaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * The data used to create many Escolas.
     */
    data: EscolaCreateManyInput | EscolaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Escola update
   */
  export type EscolaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * The data needed to update a Escola.
     */
    data: XOR<EscolaUpdateInput, EscolaUncheckedUpdateInput>
    /**
     * Choose, which Escola to update.
     */
    where: EscolaWhereUniqueInput
  }

  /**
   * Escola updateMany
   */
  export type EscolaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Escolas.
     */
    data: XOR<EscolaUpdateManyMutationInput, EscolaUncheckedUpdateManyInput>
    /**
     * Filter which Escolas to update
     */
    where?: EscolaWhereInput
    /**
     * Limit how many Escolas to update.
     */
    limit?: number
  }

  /**
   * Escola updateManyAndReturn
   */
  export type EscolaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * The data used to update Escolas.
     */
    data: XOR<EscolaUpdateManyMutationInput, EscolaUncheckedUpdateManyInput>
    /**
     * Filter which Escolas to update
     */
    where?: EscolaWhereInput
    /**
     * Limit how many Escolas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Escola upsert
   */
  export type EscolaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * The filter to search for the Escola to update in case it exists.
     */
    where: EscolaWhereUniqueInput
    /**
     * In case the Escola found by the `where` argument doesn't exist, create a new Escola with this data.
     */
    create: XOR<EscolaCreateInput, EscolaUncheckedCreateInput>
    /**
     * In case the Escola was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EscolaUpdateInput, EscolaUncheckedUpdateInput>
  }

  /**
   * Escola delete
   */
  export type EscolaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    /**
     * Filter which Escola to delete.
     */
    where: EscolaWhereUniqueInput
  }

  /**
   * Escola deleteMany
   */
  export type EscolaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Escolas to delete
     */
    where?: EscolaWhereInput
    /**
     * Limit how many Escolas to delete.
     */
    limit?: number
  }

  /**
   * Escola.responsavel
   */
  export type Escola$responsavelArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Escola.users
   */
  export type Escola$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Escola.matriculas
   */
  export type Escola$matriculasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    where?: MatriculaWhereInput
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    cursor?: MatriculaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MatriculaScalarFieldEnum | MatriculaScalarFieldEnum[]
  }

  /**
   * Escola without action
   */
  export type EscolaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
  }


  /**
   * Model Matricula
   */

  export type AggregateMatricula = {
    _count: MatriculaCountAggregateOutputType | null
    _avg: MatriculaAvgAggregateOutputType | null
    _sum: MatriculaSumAggregateOutputType | null
    _min: MatriculaMinAggregateOutputType | null
    _max: MatriculaMaxAggregateOutputType | null
  }

  export type MatriculaAvgAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    escolaId: number | null
    valorCurso: number | null
    numeroParcelas: number | null
    valorParcela: number | null
    valorMensalidade: number | null
  }

  export type MatriculaSumAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    escolaId: number | null
    valorCurso: number | null
    numeroParcelas: number | null
    valorParcela: number | null
    valorMensalidade: number | null
  }

  export type MatriculaMinAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    escolaId: number | null
    valorCurso: number | null
    numeroParcelas: number | null
    valorParcela: number | null
    valorMensalidade: number | null
    tipoCobranca: string | null
    primeiraDataPagamento: Date | null
    status: string | null
    nivelIdioma: string | null
    horarioInicio: string | null
    horarioFim: string | null
    escolaridade: string | null
    localNascimento: string | null
    redeSocial: string | null
    nomePai: string | null
    contatoPai: string | null
    nomeMae: string | null
    contatoMae: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MatriculaMaxAggregateOutputType = {
    id: number | null
    usuarioId: number | null
    escolaId: number | null
    valorCurso: number | null
    numeroParcelas: number | null
    valorParcela: number | null
    valorMensalidade: number | null
    tipoCobranca: string | null
    primeiraDataPagamento: Date | null
    status: string | null
    nivelIdioma: string | null
    horarioInicio: string | null
    horarioFim: string | null
    escolaridade: string | null
    localNascimento: string | null
    redeSocial: string | null
    nomePai: string | null
    contatoPai: string | null
    nomeMae: string | null
    contatoMae: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type MatriculaCountAggregateOutputType = {
    id: number
    usuarioId: number
    escolaId: number
    valorCurso: number
    numeroParcelas: number
    valorParcela: number
    valorMensalidade: number
    tipoCobranca: number
    primeiraDataPagamento: number
    status: number
    nivelIdioma: number
    horarioInicio: number
    horarioFim: number
    escolaridade: number
    localNascimento: number
    redeSocial: number
    nomePai: number
    contatoPai: number
    nomeMae: number
    contatoMae: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type MatriculaAvgAggregateInputType = {
    id?: true
    usuarioId?: true
    escolaId?: true
    valorCurso?: true
    numeroParcelas?: true
    valorParcela?: true
    valorMensalidade?: true
  }

  export type MatriculaSumAggregateInputType = {
    id?: true
    usuarioId?: true
    escolaId?: true
    valorCurso?: true
    numeroParcelas?: true
    valorParcela?: true
    valorMensalidade?: true
  }

  export type MatriculaMinAggregateInputType = {
    id?: true
    usuarioId?: true
    escolaId?: true
    valorCurso?: true
    numeroParcelas?: true
    valorParcela?: true
    valorMensalidade?: true
    tipoCobranca?: true
    primeiraDataPagamento?: true
    status?: true
    nivelIdioma?: true
    horarioInicio?: true
    horarioFim?: true
    escolaridade?: true
    localNascimento?: true
    redeSocial?: true
    nomePai?: true
    contatoPai?: true
    nomeMae?: true
    contatoMae?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MatriculaMaxAggregateInputType = {
    id?: true
    usuarioId?: true
    escolaId?: true
    valorCurso?: true
    numeroParcelas?: true
    valorParcela?: true
    valorMensalidade?: true
    tipoCobranca?: true
    primeiraDataPagamento?: true
    status?: true
    nivelIdioma?: true
    horarioInicio?: true
    horarioFim?: true
    escolaridade?: true
    localNascimento?: true
    redeSocial?: true
    nomePai?: true
    contatoPai?: true
    nomeMae?: true
    contatoMae?: true
    createdAt?: true
    updatedAt?: true
  }

  export type MatriculaCountAggregateInputType = {
    id?: true
    usuarioId?: true
    escolaId?: true
    valorCurso?: true
    numeroParcelas?: true
    valorParcela?: true
    valorMensalidade?: true
    tipoCobranca?: true
    primeiraDataPagamento?: true
    status?: true
    nivelIdioma?: true
    horarioInicio?: true
    horarioFim?: true
    escolaridade?: true
    localNascimento?: true
    redeSocial?: true
    nomePai?: true
    contatoPai?: true
    nomeMae?: true
    contatoMae?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type MatriculaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Matricula to aggregate.
     */
    where?: MatriculaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Matriculas to fetch.
     */
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MatriculaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Matriculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Matriculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Matriculas
    **/
    _count?: true | MatriculaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MatriculaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MatriculaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MatriculaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MatriculaMaxAggregateInputType
  }

  export type GetMatriculaAggregateType<T extends MatriculaAggregateArgs> = {
        [P in keyof T & keyof AggregateMatricula]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMatricula[P]>
      : GetScalarType<T[P], AggregateMatricula[P]>
  }




  export type MatriculaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MatriculaWhereInput
    orderBy?: MatriculaOrderByWithAggregationInput | MatriculaOrderByWithAggregationInput[]
    by: MatriculaScalarFieldEnum[] | MatriculaScalarFieldEnum
    having?: MatriculaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MatriculaCountAggregateInputType | true
    _avg?: MatriculaAvgAggregateInputType
    _sum?: MatriculaSumAggregateInputType
    _min?: MatriculaMinAggregateInputType
    _max?: MatriculaMaxAggregateInputType
  }

  export type MatriculaGroupByOutputType = {
    id: number
    usuarioId: number
    escolaId: number | null
    valorCurso: number
    numeroParcelas: number | null
    valorParcela: number | null
    valorMensalidade: number | null
    tipoCobranca: string
    primeiraDataPagamento: Date | null
    status: string
    nivelIdioma: string | null
    horarioInicio: string | null
    horarioFim: string | null
    escolaridade: string | null
    localNascimento: string | null
    redeSocial: string | null
    nomePai: string | null
    contatoPai: string | null
    nomeMae: string | null
    contatoMae: string | null
    createdAt: Date
    updatedAt: Date
    _count: MatriculaCountAggregateOutputType | null
    _avg: MatriculaAvgAggregateOutputType | null
    _sum: MatriculaSumAggregateOutputType | null
    _min: MatriculaMinAggregateOutputType | null
    _max: MatriculaMaxAggregateOutputType | null
  }

  type GetMatriculaGroupByPayload<T extends MatriculaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MatriculaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MatriculaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MatriculaGroupByOutputType[P]>
            : GetScalarType<T[P], MatriculaGroupByOutputType[P]>
        }
      >
    >


  export type MatriculaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    escolaId?: boolean
    valorCurso?: boolean
    numeroParcelas?: boolean
    valorParcela?: boolean
    valorMensalidade?: boolean
    tipoCobranca?: boolean
    primeiraDataPagamento?: boolean
    status?: boolean
    nivelIdioma?: boolean
    horarioInicio?: boolean
    horarioFim?: boolean
    escolaridade?: boolean
    localNascimento?: boolean
    redeSocial?: boolean
    nomePai?: boolean
    contatoPai?: boolean
    nomeMae?: boolean
    contatoMae?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }, ExtArgs["result"]["matricula"]>

  export type MatriculaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    escolaId?: boolean
    valorCurso?: boolean
    numeroParcelas?: boolean
    valorParcela?: boolean
    valorMensalidade?: boolean
    tipoCobranca?: boolean
    primeiraDataPagamento?: boolean
    status?: boolean
    nivelIdioma?: boolean
    horarioInicio?: boolean
    horarioFim?: boolean
    escolaridade?: boolean
    localNascimento?: boolean
    redeSocial?: boolean
    nomePai?: boolean
    contatoPai?: boolean
    nomeMae?: boolean
    contatoMae?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }, ExtArgs["result"]["matricula"]>

  export type MatriculaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuarioId?: boolean
    escolaId?: boolean
    valorCurso?: boolean
    numeroParcelas?: boolean
    valorParcela?: boolean
    valorMensalidade?: boolean
    tipoCobranca?: boolean
    primeiraDataPagamento?: boolean
    status?: boolean
    nivelIdioma?: boolean
    horarioInicio?: boolean
    horarioFim?: boolean
    escolaridade?: boolean
    localNascimento?: boolean
    redeSocial?: boolean
    nomePai?: boolean
    contatoPai?: boolean
    nomeMae?: boolean
    contatoMae?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }, ExtArgs["result"]["matricula"]>

  export type MatriculaSelectScalar = {
    id?: boolean
    usuarioId?: boolean
    escolaId?: boolean
    valorCurso?: boolean
    numeroParcelas?: boolean
    valorParcela?: boolean
    valorMensalidade?: boolean
    tipoCobranca?: boolean
    primeiraDataPagamento?: boolean
    status?: boolean
    nivelIdioma?: boolean
    horarioInicio?: boolean
    horarioFim?: boolean
    escolaridade?: boolean
    localNascimento?: boolean
    redeSocial?: boolean
    nomePai?: boolean
    contatoPai?: boolean
    nomeMae?: boolean
    contatoMae?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type MatriculaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuarioId" | "escolaId" | "valorCurso" | "numeroParcelas" | "valorParcela" | "valorMensalidade" | "tipoCobranca" | "primeiraDataPagamento" | "status" | "nivelIdioma" | "horarioInicio" | "horarioFim" | "escolaridade" | "localNascimento" | "redeSocial" | "nomePai" | "contatoPai" | "nomeMae" | "contatoMae" | "createdAt" | "updatedAt", ExtArgs["result"]["matricula"]>
  export type MatriculaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }
  export type MatriculaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }
  export type MatriculaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | UserDefaultArgs<ExtArgs>
    escola?: boolean | Matricula$escolaArgs<ExtArgs>
  }

  export type $MatriculaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Matricula"
    objects: {
      usuario: Prisma.$UserPayload<ExtArgs>
      escola: Prisma.$EscolaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuarioId: number
      escolaId: number | null
      valorCurso: number
      numeroParcelas: number | null
      valorParcela: number | null
      valorMensalidade: number | null
      tipoCobranca: string
      primeiraDataPagamento: Date | null
      status: string
      nivelIdioma: string | null
      horarioInicio: string | null
      horarioFim: string | null
      escolaridade: string | null
      localNascimento: string | null
      redeSocial: string | null
      nomePai: string | null
      contatoPai: string | null
      nomeMae: string | null
      contatoMae: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["matricula"]>
    composites: {}
  }

  type MatriculaGetPayload<S extends boolean | null | undefined | MatriculaDefaultArgs> = $Result.GetResult<Prisma.$MatriculaPayload, S>

  type MatriculaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MatriculaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MatriculaCountAggregateInputType | true
    }

  export interface MatriculaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Matricula'], meta: { name: 'Matricula' } }
    /**
     * Find zero or one Matricula that matches the filter.
     * @param {MatriculaFindUniqueArgs} args - Arguments to find a Matricula
     * @example
     * // Get one Matricula
     * const matricula = await prisma.matricula.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MatriculaFindUniqueArgs>(args: SelectSubset<T, MatriculaFindUniqueArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Matricula that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MatriculaFindUniqueOrThrowArgs} args - Arguments to find a Matricula
     * @example
     * // Get one Matricula
     * const matricula = await prisma.matricula.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MatriculaFindUniqueOrThrowArgs>(args: SelectSubset<T, MatriculaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Matricula that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaFindFirstArgs} args - Arguments to find a Matricula
     * @example
     * // Get one Matricula
     * const matricula = await prisma.matricula.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MatriculaFindFirstArgs>(args?: SelectSubset<T, MatriculaFindFirstArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Matricula that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaFindFirstOrThrowArgs} args - Arguments to find a Matricula
     * @example
     * // Get one Matricula
     * const matricula = await prisma.matricula.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MatriculaFindFirstOrThrowArgs>(args?: SelectSubset<T, MatriculaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Matriculas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Matriculas
     * const matriculas = await prisma.matricula.findMany()
     * 
     * // Get first 10 Matriculas
     * const matriculas = await prisma.matricula.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const matriculaWithIdOnly = await prisma.matricula.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MatriculaFindManyArgs>(args?: SelectSubset<T, MatriculaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Matricula.
     * @param {MatriculaCreateArgs} args - Arguments to create a Matricula.
     * @example
     * // Create one Matricula
     * const Matricula = await prisma.matricula.create({
     *   data: {
     *     // ... data to create a Matricula
     *   }
     * })
     * 
     */
    create<T extends MatriculaCreateArgs>(args: SelectSubset<T, MatriculaCreateArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Matriculas.
     * @param {MatriculaCreateManyArgs} args - Arguments to create many Matriculas.
     * @example
     * // Create many Matriculas
     * const matricula = await prisma.matricula.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MatriculaCreateManyArgs>(args?: SelectSubset<T, MatriculaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Matriculas and returns the data saved in the database.
     * @param {MatriculaCreateManyAndReturnArgs} args - Arguments to create many Matriculas.
     * @example
     * // Create many Matriculas
     * const matricula = await prisma.matricula.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Matriculas and only return the `id`
     * const matriculaWithIdOnly = await prisma.matricula.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MatriculaCreateManyAndReturnArgs>(args?: SelectSubset<T, MatriculaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Matricula.
     * @param {MatriculaDeleteArgs} args - Arguments to delete one Matricula.
     * @example
     * // Delete one Matricula
     * const Matricula = await prisma.matricula.delete({
     *   where: {
     *     // ... filter to delete one Matricula
     *   }
     * })
     * 
     */
    delete<T extends MatriculaDeleteArgs>(args: SelectSubset<T, MatriculaDeleteArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Matricula.
     * @param {MatriculaUpdateArgs} args - Arguments to update one Matricula.
     * @example
     * // Update one Matricula
     * const matricula = await prisma.matricula.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MatriculaUpdateArgs>(args: SelectSubset<T, MatriculaUpdateArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Matriculas.
     * @param {MatriculaDeleteManyArgs} args - Arguments to filter Matriculas to delete.
     * @example
     * // Delete a few Matriculas
     * const { count } = await prisma.matricula.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MatriculaDeleteManyArgs>(args?: SelectSubset<T, MatriculaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Matriculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Matriculas
     * const matricula = await prisma.matricula.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MatriculaUpdateManyArgs>(args: SelectSubset<T, MatriculaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Matriculas and returns the data updated in the database.
     * @param {MatriculaUpdateManyAndReturnArgs} args - Arguments to update many Matriculas.
     * @example
     * // Update many Matriculas
     * const matricula = await prisma.matricula.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Matriculas and only return the `id`
     * const matriculaWithIdOnly = await prisma.matricula.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MatriculaUpdateManyAndReturnArgs>(args: SelectSubset<T, MatriculaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Matricula.
     * @param {MatriculaUpsertArgs} args - Arguments to update or create a Matricula.
     * @example
     * // Update or create a Matricula
     * const matricula = await prisma.matricula.upsert({
     *   create: {
     *     // ... data to create a Matricula
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Matricula we want to update
     *   }
     * })
     */
    upsert<T extends MatriculaUpsertArgs>(args: SelectSubset<T, MatriculaUpsertArgs<ExtArgs>>): Prisma__MatriculaClient<$Result.GetResult<Prisma.$MatriculaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Matriculas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaCountArgs} args - Arguments to filter Matriculas to count.
     * @example
     * // Count the number of Matriculas
     * const count = await prisma.matricula.count({
     *   where: {
     *     // ... the filter for the Matriculas we want to count
     *   }
     * })
    **/
    count<T extends MatriculaCountArgs>(
      args?: Subset<T, MatriculaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MatriculaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Matricula.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MatriculaAggregateArgs>(args: Subset<T, MatriculaAggregateArgs>): Prisma.PrismaPromise<GetMatriculaAggregateType<T>>

    /**
     * Group by Matricula.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MatriculaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MatriculaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MatriculaGroupByArgs['orderBy'] }
        : { orderBy?: MatriculaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MatriculaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMatriculaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Matricula model
   */
  readonly fields: MatriculaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Matricula.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MatriculaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    escola<T extends Matricula$escolaArgs<ExtArgs> = {}>(args?: Subset<T, Matricula$escolaArgs<ExtArgs>>): Prisma__EscolaClient<$Result.GetResult<Prisma.$EscolaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Matricula model
   */
  interface MatriculaFieldRefs {
    readonly id: FieldRef<"Matricula", 'Int'>
    readonly usuarioId: FieldRef<"Matricula", 'Int'>
    readonly escolaId: FieldRef<"Matricula", 'Int'>
    readonly valorCurso: FieldRef<"Matricula", 'Float'>
    readonly numeroParcelas: FieldRef<"Matricula", 'Int'>
    readonly valorParcela: FieldRef<"Matricula", 'Float'>
    readonly valorMensalidade: FieldRef<"Matricula", 'Float'>
    readonly tipoCobranca: FieldRef<"Matricula", 'String'>
    readonly primeiraDataPagamento: FieldRef<"Matricula", 'DateTime'>
    readonly status: FieldRef<"Matricula", 'String'>
    readonly nivelIdioma: FieldRef<"Matricula", 'String'>
    readonly horarioInicio: FieldRef<"Matricula", 'String'>
    readonly horarioFim: FieldRef<"Matricula", 'String'>
    readonly escolaridade: FieldRef<"Matricula", 'String'>
    readonly localNascimento: FieldRef<"Matricula", 'String'>
    readonly redeSocial: FieldRef<"Matricula", 'String'>
    readonly nomePai: FieldRef<"Matricula", 'String'>
    readonly contatoPai: FieldRef<"Matricula", 'String'>
    readonly nomeMae: FieldRef<"Matricula", 'String'>
    readonly contatoMae: FieldRef<"Matricula", 'String'>
    readonly createdAt: FieldRef<"Matricula", 'DateTime'>
    readonly updatedAt: FieldRef<"Matricula", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Matricula findUnique
   */
  export type MatriculaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter, which Matricula to fetch.
     */
    where: MatriculaWhereUniqueInput
  }

  /**
   * Matricula findUniqueOrThrow
   */
  export type MatriculaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter, which Matricula to fetch.
     */
    where: MatriculaWhereUniqueInput
  }

  /**
   * Matricula findFirst
   */
  export type MatriculaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter, which Matricula to fetch.
     */
    where?: MatriculaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Matriculas to fetch.
     */
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Matriculas.
     */
    cursor?: MatriculaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Matriculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Matriculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Matriculas.
     */
    distinct?: MatriculaScalarFieldEnum | MatriculaScalarFieldEnum[]
  }

  /**
   * Matricula findFirstOrThrow
   */
  export type MatriculaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter, which Matricula to fetch.
     */
    where?: MatriculaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Matriculas to fetch.
     */
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Matriculas.
     */
    cursor?: MatriculaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Matriculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Matriculas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Matriculas.
     */
    distinct?: MatriculaScalarFieldEnum | MatriculaScalarFieldEnum[]
  }

  /**
   * Matricula findMany
   */
  export type MatriculaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter, which Matriculas to fetch.
     */
    where?: MatriculaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Matriculas to fetch.
     */
    orderBy?: MatriculaOrderByWithRelationInput | MatriculaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Matriculas.
     */
    cursor?: MatriculaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Matriculas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Matriculas.
     */
    skip?: number
    distinct?: MatriculaScalarFieldEnum | MatriculaScalarFieldEnum[]
  }

  /**
   * Matricula create
   */
  export type MatriculaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * The data needed to create a Matricula.
     */
    data: XOR<MatriculaCreateInput, MatriculaUncheckedCreateInput>
  }

  /**
   * Matricula createMany
   */
  export type MatriculaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Matriculas.
     */
    data: MatriculaCreateManyInput | MatriculaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Matricula createManyAndReturn
   */
  export type MatriculaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * The data used to create many Matriculas.
     */
    data: MatriculaCreateManyInput | MatriculaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Matricula update
   */
  export type MatriculaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * The data needed to update a Matricula.
     */
    data: XOR<MatriculaUpdateInput, MatriculaUncheckedUpdateInput>
    /**
     * Choose, which Matricula to update.
     */
    where: MatriculaWhereUniqueInput
  }

  /**
   * Matricula updateMany
   */
  export type MatriculaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Matriculas.
     */
    data: XOR<MatriculaUpdateManyMutationInput, MatriculaUncheckedUpdateManyInput>
    /**
     * Filter which Matriculas to update
     */
    where?: MatriculaWhereInput
    /**
     * Limit how many Matriculas to update.
     */
    limit?: number
  }

  /**
   * Matricula updateManyAndReturn
   */
  export type MatriculaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * The data used to update Matriculas.
     */
    data: XOR<MatriculaUpdateManyMutationInput, MatriculaUncheckedUpdateManyInput>
    /**
     * Filter which Matriculas to update
     */
    where?: MatriculaWhereInput
    /**
     * Limit how many Matriculas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Matricula upsert
   */
  export type MatriculaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * The filter to search for the Matricula to update in case it exists.
     */
    where: MatriculaWhereUniqueInput
    /**
     * In case the Matricula found by the `where` argument doesn't exist, create a new Matricula with this data.
     */
    create: XOR<MatriculaCreateInput, MatriculaUncheckedCreateInput>
    /**
     * In case the Matricula was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MatriculaUpdateInput, MatriculaUncheckedUpdateInput>
  }

  /**
   * Matricula delete
   */
  export type MatriculaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
    /**
     * Filter which Matricula to delete.
     */
    where: MatriculaWhereUniqueInput
  }

  /**
   * Matricula deleteMany
   */
  export type MatriculaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Matriculas to delete
     */
    where?: MatriculaWhereInput
    /**
     * Limit how many Matriculas to delete.
     */
    limit?: number
  }

  /**
   * Matricula.escola
   */
  export type Matricula$escolaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Escola
     */
    select?: EscolaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Escola
     */
    omit?: EscolaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EscolaInclude<ExtArgs> | null
    where?: EscolaWhereInput
  }

  /**
   * Matricula without action
   */
  export type MatriculaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Matricula
     */
    select?: MatriculaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Matricula
     */
    omit?: MatriculaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MatriculaInclude<ExtArgs> | null
  }


  /**
   * Model Curso
   */

  export type AggregateCurso = {
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  export type CursoAvgAggregateOutputType = {
    id: number | null
    instrutorId: number | null
    preco: number | null
  }

  export type CursoSumAggregateOutputType = {
    id: number | null
    instrutorId: number | null
    preco: number | null
  }

  export type CursoMinAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    instrutorId: number | null
    categoria: string | null
    nivel: string | null
    duracao: string | null
    preco: number | null
    status: string | null
    dataPublicacao: Date | null
    tags: string | null
    arquivo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CursoMaxAggregateOutputType = {
    id: number | null
    titulo: string | null
    descricao: string | null
    instrutorId: number | null
    categoria: string | null
    nivel: string | null
    duracao: string | null
    preco: number | null
    status: string | null
    dataPublicacao: Date | null
    tags: string | null
    arquivo: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CursoCountAggregateOutputType = {
    id: number
    titulo: number
    descricao: number
    instrutorId: number
    categoria: number
    nivel: number
    duracao: number
    preco: number
    status: number
    dataPublicacao: number
    tags: number
    arquivo: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CursoAvgAggregateInputType = {
    id?: true
    instrutorId?: true
    preco?: true
  }

  export type CursoSumAggregateInputType = {
    id?: true
    instrutorId?: true
    preco?: true
  }

  export type CursoMinAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    instrutorId?: true
    categoria?: true
    nivel?: true
    duracao?: true
    preco?: true
    status?: true
    dataPublicacao?: true
    tags?: true
    arquivo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CursoMaxAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    instrutorId?: true
    categoria?: true
    nivel?: true
    duracao?: true
    preco?: true
    status?: true
    dataPublicacao?: true
    tags?: true
    arquivo?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CursoCountAggregateInputType = {
    id?: true
    titulo?: true
    descricao?: true
    instrutorId?: true
    categoria?: true
    nivel?: true
    duracao?: true
    preco?: true
    status?: true
    dataPublicacao?: true
    tags?: true
    arquivo?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CursoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Curso to aggregate.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Cursos
    **/
    _count?: true | CursoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CursoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CursoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CursoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CursoMaxAggregateInputType
  }

  export type GetCursoAggregateType<T extends CursoAggregateArgs> = {
        [P in keyof T & keyof AggregateCurso]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCurso[P]>
      : GetScalarType<T[P], AggregateCurso[P]>
  }




  export type CursoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CursoWhereInput
    orderBy?: CursoOrderByWithAggregationInput | CursoOrderByWithAggregationInput[]
    by: CursoScalarFieldEnum[] | CursoScalarFieldEnum
    having?: CursoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CursoCountAggregateInputType | true
    _avg?: CursoAvgAggregateInputType
    _sum?: CursoSumAggregateInputType
    _min?: CursoMinAggregateInputType
    _max?: CursoMaxAggregateInputType
  }

  export type CursoGroupByOutputType = {
    id: number
    titulo: string
    descricao: string | null
    instrutorId: number | null
    categoria: string | null
    nivel: string | null
    duracao: string | null
    preco: number | null
    status: string
    dataPublicacao: Date
    tags: string | null
    arquivo: string | null
    createdAt: Date
    updatedAt: Date
    _count: CursoCountAggregateOutputType | null
    _avg: CursoAvgAggregateOutputType | null
    _sum: CursoSumAggregateOutputType | null
    _min: CursoMinAggregateOutputType | null
    _max: CursoMaxAggregateOutputType | null
  }

  type GetCursoGroupByPayload<T extends CursoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CursoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CursoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CursoGroupByOutputType[P]>
            : GetScalarType<T[P], CursoGroupByOutputType[P]>
        }
      >
    >


  export type CursoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    instrutorId?: boolean
    categoria?: boolean
    nivel?: boolean
    duracao?: boolean
    preco?: boolean
    status?: boolean
    dataPublicacao?: boolean
    tags?: boolean
    arquivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    instrutorId?: boolean
    categoria?: boolean
    nivel?: boolean
    duracao?: boolean
    preco?: boolean
    status?: boolean
    dataPublicacao?: boolean
    tags?: boolean
    arquivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    instrutorId?: boolean
    categoria?: boolean
    nivel?: boolean
    duracao?: boolean
    preco?: boolean
    status?: boolean
    dataPublicacao?: boolean
    tags?: boolean
    arquivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }, ExtArgs["result"]["curso"]>

  export type CursoSelectScalar = {
    id?: boolean
    titulo?: boolean
    descricao?: boolean
    instrutorId?: boolean
    categoria?: boolean
    nivel?: boolean
    duracao?: boolean
    preco?: boolean
    status?: boolean
    dataPublicacao?: boolean
    tags?: boolean
    arquivo?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CursoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "titulo" | "descricao" | "instrutorId" | "categoria" | "nivel" | "duracao" | "preco" | "status" | "dataPublicacao" | "tags" | "arquivo" | "createdAt" | "updatedAt", ExtArgs["result"]["curso"]>
  export type CursoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }
  export type CursoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }
  export type CursoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    instrutor?: boolean | Curso$instrutorArgs<ExtArgs>
  }

  export type $CursoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Curso"
    objects: {
      instrutor: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      titulo: string
      descricao: string | null
      instrutorId: number | null
      categoria: string | null
      nivel: string | null
      duracao: string | null
      preco: number | null
      status: string
      dataPublicacao: Date
      tags: string | null
      arquivo: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["curso"]>
    composites: {}
  }

  type CursoGetPayload<S extends boolean | null | undefined | CursoDefaultArgs> = $Result.GetResult<Prisma.$CursoPayload, S>

  type CursoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CursoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CursoCountAggregateInputType | true
    }

  export interface CursoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Curso'], meta: { name: 'Curso' } }
    /**
     * Find zero or one Curso that matches the filter.
     * @param {CursoFindUniqueArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CursoFindUniqueArgs>(args: SelectSubset<T, CursoFindUniqueArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Curso that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CursoFindUniqueOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CursoFindUniqueOrThrowArgs>(args: SelectSubset<T, CursoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CursoFindFirstArgs>(args?: SelectSubset<T, CursoFindFirstArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Curso that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindFirstOrThrowArgs} args - Arguments to find a Curso
     * @example
     * // Get one Curso
     * const curso = await prisma.curso.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CursoFindFirstOrThrowArgs>(args?: SelectSubset<T, CursoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cursos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cursos
     * const cursos = await prisma.curso.findMany()
     * 
     * // Get first 10 Cursos
     * const cursos = await prisma.curso.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cursoWithIdOnly = await prisma.curso.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CursoFindManyArgs>(args?: SelectSubset<T, CursoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Curso.
     * @param {CursoCreateArgs} args - Arguments to create a Curso.
     * @example
     * // Create one Curso
     * const Curso = await prisma.curso.create({
     *   data: {
     *     // ... data to create a Curso
     *   }
     * })
     * 
     */
    create<T extends CursoCreateArgs>(args: SelectSubset<T, CursoCreateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cursos.
     * @param {CursoCreateManyArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CursoCreateManyArgs>(args?: SelectSubset<T, CursoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cursos and returns the data saved in the database.
     * @param {CursoCreateManyAndReturnArgs} args - Arguments to create many Cursos.
     * @example
     * // Create many Cursos
     * const curso = await prisma.curso.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cursos and only return the `id`
     * const cursoWithIdOnly = await prisma.curso.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CursoCreateManyAndReturnArgs>(args?: SelectSubset<T, CursoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Curso.
     * @param {CursoDeleteArgs} args - Arguments to delete one Curso.
     * @example
     * // Delete one Curso
     * const Curso = await prisma.curso.delete({
     *   where: {
     *     // ... filter to delete one Curso
     *   }
     * })
     * 
     */
    delete<T extends CursoDeleteArgs>(args: SelectSubset<T, CursoDeleteArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Curso.
     * @param {CursoUpdateArgs} args - Arguments to update one Curso.
     * @example
     * // Update one Curso
     * const curso = await prisma.curso.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CursoUpdateArgs>(args: SelectSubset<T, CursoUpdateArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cursos.
     * @param {CursoDeleteManyArgs} args - Arguments to filter Cursos to delete.
     * @example
     * // Delete a few Cursos
     * const { count } = await prisma.curso.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CursoDeleteManyArgs>(args?: SelectSubset<T, CursoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CursoUpdateManyArgs>(args: SelectSubset<T, CursoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cursos and returns the data updated in the database.
     * @param {CursoUpdateManyAndReturnArgs} args - Arguments to update many Cursos.
     * @example
     * // Update many Cursos
     * const curso = await prisma.curso.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cursos and only return the `id`
     * const cursoWithIdOnly = await prisma.curso.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CursoUpdateManyAndReturnArgs>(args: SelectSubset<T, CursoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Curso.
     * @param {CursoUpsertArgs} args - Arguments to update or create a Curso.
     * @example
     * // Update or create a Curso
     * const curso = await prisma.curso.upsert({
     *   create: {
     *     // ... data to create a Curso
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Curso we want to update
     *   }
     * })
     */
    upsert<T extends CursoUpsertArgs>(args: SelectSubset<T, CursoUpsertArgs<ExtArgs>>): Prisma__CursoClient<$Result.GetResult<Prisma.$CursoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cursos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoCountArgs} args - Arguments to filter Cursos to count.
     * @example
     * // Count the number of Cursos
     * const count = await prisma.curso.count({
     *   where: {
     *     // ... the filter for the Cursos we want to count
     *   }
     * })
    **/
    count<T extends CursoCountArgs>(
      args?: Subset<T, CursoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CursoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CursoAggregateArgs>(args: Subset<T, CursoAggregateArgs>): Prisma.PrismaPromise<GetCursoAggregateType<T>>

    /**
     * Group by Curso.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CursoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CursoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CursoGroupByArgs['orderBy'] }
        : { orderBy?: CursoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CursoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCursoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Curso model
   */
  readonly fields: CursoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Curso.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CursoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    instrutor<T extends Curso$instrutorArgs<ExtArgs> = {}>(args?: Subset<T, Curso$instrutorArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Curso model
   */
  interface CursoFieldRefs {
    readonly id: FieldRef<"Curso", 'Int'>
    readonly titulo: FieldRef<"Curso", 'String'>
    readonly descricao: FieldRef<"Curso", 'String'>
    readonly instrutorId: FieldRef<"Curso", 'Int'>
    readonly categoria: FieldRef<"Curso", 'String'>
    readonly nivel: FieldRef<"Curso", 'String'>
    readonly duracao: FieldRef<"Curso", 'String'>
    readonly preco: FieldRef<"Curso", 'Float'>
    readonly status: FieldRef<"Curso", 'String'>
    readonly dataPublicacao: FieldRef<"Curso", 'DateTime'>
    readonly tags: FieldRef<"Curso", 'String'>
    readonly arquivo: FieldRef<"Curso", 'String'>
    readonly createdAt: FieldRef<"Curso", 'DateTime'>
    readonly updatedAt: FieldRef<"Curso", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Curso findUnique
   */
  export type CursoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findUniqueOrThrow
   */
  export type CursoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso findFirst
   */
  export type CursoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findFirstOrThrow
   */
  export type CursoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Curso to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Cursos.
     */
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso findMany
   */
  export type CursoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter, which Cursos to fetch.
     */
    where?: CursoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Cursos to fetch.
     */
    orderBy?: CursoOrderByWithRelationInput | CursoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Cursos.
     */
    cursor?: CursoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Cursos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Cursos.
     */
    skip?: number
    distinct?: CursoScalarFieldEnum | CursoScalarFieldEnum[]
  }

  /**
   * Curso create
   */
  export type CursoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to create a Curso.
     */
    data: XOR<CursoCreateInput, CursoUncheckedCreateInput>
  }

  /**
   * Curso createMany
   */
  export type CursoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Curso createManyAndReturn
   */
  export type CursoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to create many Cursos.
     */
    data: CursoCreateManyInput | CursoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Curso update
   */
  export type CursoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The data needed to update a Curso.
     */
    data: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
    /**
     * Choose, which Curso to update.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso updateMany
   */
  export type CursoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
  }

  /**
   * Curso updateManyAndReturn
   */
  export type CursoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * The data used to update Cursos.
     */
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyInput>
    /**
     * Filter which Cursos to update
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Curso upsert
   */
  export type CursoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * The filter to search for the Curso to update in case it exists.
     */
    where: CursoWhereUniqueInput
    /**
     * In case the Curso found by the `where` argument doesn't exist, create a new Curso with this data.
     */
    create: XOR<CursoCreateInput, CursoUncheckedCreateInput>
    /**
     * In case the Curso was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CursoUpdateInput, CursoUncheckedUpdateInput>
  }

  /**
   * Curso delete
   */
  export type CursoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
    /**
     * Filter which Curso to delete.
     */
    where: CursoWhereUniqueInput
  }

  /**
   * Curso deleteMany
   */
  export type CursoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Cursos to delete
     */
    where?: CursoWhereInput
    /**
     * Limit how many Cursos to delete.
     */
    limit?: number
  }

  /**
   * Curso.instrutor
   */
  export type Curso$instrutorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Curso without action
   */
  export type CursoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Curso
     */
    select?: CursoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Curso
     */
    omit?: CursoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CursoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    login: 'login',
    password: 'password',
    tipoUser: 'tipoUser',
    rg: 'rg',
    cpf: 'cpf',
    dataNascimento: 'dataNascimento',
    estadoCivil: 'estadoCivil',
    cnpj: 'cnpj',
    ie: 'ie',
    whatsapp: 'whatsapp',
    telefone: 'telefone',
    empresaAtuacao: 'empresaAtuacao',
    profissao: 'profissao',
    endCidadeEstado: 'endCidadeEstado',
    endRua: 'endRua',
    endNum: 'endNum',
    endCep: 'endCep',
    descricao: 'descricao',
    fotoPerfil: 'fotoPerfil',
    escolaId: 'escolaId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const EscolaScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    dataCadastro: 'dataCadastro',
    responsavelId: 'responsavelId',
    cidade: 'cidade',
    bairro: 'bairro',
    estado: 'estado',
    rua: 'rua',
    numero: 'numero',
    descricao: 'descricao',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EscolaScalarFieldEnum = (typeof EscolaScalarFieldEnum)[keyof typeof EscolaScalarFieldEnum]


  export const MatriculaScalarFieldEnum: {
    id: 'id',
    usuarioId: 'usuarioId',
    escolaId: 'escolaId',
    valorCurso: 'valorCurso',
    numeroParcelas: 'numeroParcelas',
    valorParcela: 'valorParcela',
    valorMensalidade: 'valorMensalidade',
    tipoCobranca: 'tipoCobranca',
    primeiraDataPagamento: 'primeiraDataPagamento',
    status: 'status',
    nivelIdioma: 'nivelIdioma',
    horarioInicio: 'horarioInicio',
    horarioFim: 'horarioFim',
    escolaridade: 'escolaridade',
    localNascimento: 'localNascimento',
    redeSocial: 'redeSocial',
    nomePai: 'nomePai',
    contatoPai: 'contatoPai',
    nomeMae: 'nomeMae',
    contatoMae: 'contatoMae',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type MatriculaScalarFieldEnum = (typeof MatriculaScalarFieldEnum)[keyof typeof MatriculaScalarFieldEnum]


  export const CursoScalarFieldEnum: {
    id: 'id',
    titulo: 'titulo',
    descricao: 'descricao',
    instrutorId: 'instrutorId',
    categoria: 'categoria',
    nivel: 'nivel',
    duracao: 'duracao',
    preco: 'preco',
    status: 'status',
    dataPublicacao: 'dataPublicacao',
    tags: 'tags',
    arquivo: 'arquivo',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CursoScalarFieldEnum = (typeof CursoScalarFieldEnum)[keyof typeof CursoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    nome?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    login?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    tipoUser?: StringFilter<"User"> | string
    rg?: StringNullableFilter<"User"> | string | null
    cpf?: StringFilter<"User"> | string
    dataNascimento?: StringFilter<"User"> | string
    estadoCivil?: StringNullableFilter<"User"> | string | null
    cnpj?: StringNullableFilter<"User"> | string | null
    ie?: StringNullableFilter<"User"> | string | null
    whatsapp?: StringNullableFilter<"User"> | string | null
    telefone?: StringNullableFilter<"User"> | string | null
    empresaAtuacao?: StringNullableFilter<"User"> | string | null
    profissao?: StringNullableFilter<"User"> | string | null
    endCidadeEstado?: StringNullableFilter<"User"> | string | null
    endRua?: StringNullableFilter<"User"> | string | null
    endNum?: StringNullableFilter<"User"> | string | null
    endCep?: StringNullableFilter<"User"> | string | null
    descricao?: StringNullableFilter<"User"> | string | null
    fotoPerfil?: StringNullableFilter<"User"> | string | null
    escolaId?: IntNullableFilter<"User"> | number | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    escola?: XOR<EscolaNullableScalarRelationFilter, EscolaWhereInput> | null
    escolasResponsavel?: EscolaListRelationFilter
    matriculas?: MatriculaListRelationFilter
    cursosInstrutor?: CursoListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    login?: SortOrder
    password?: SortOrder
    tipoUser?: SortOrder
    rg?: SortOrderInput | SortOrder
    cpf?: SortOrder
    dataNascimento?: SortOrder
    estadoCivil?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    ie?: SortOrderInput | SortOrder
    whatsapp?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    empresaAtuacao?: SortOrderInput | SortOrder
    profissao?: SortOrderInput | SortOrder
    endCidadeEstado?: SortOrderInput | SortOrder
    endRua?: SortOrderInput | SortOrder
    endNum?: SortOrderInput | SortOrder
    endCep?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    fotoPerfil?: SortOrderInput | SortOrder
    escolaId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    escola?: EscolaOrderByWithRelationInput
    escolasResponsavel?: EscolaOrderByRelationAggregateInput
    matriculas?: MatriculaOrderByRelationAggregateInput
    cursosInstrutor?: CursoOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    login?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    nome?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    tipoUser?: StringFilter<"User"> | string
    rg?: StringNullableFilter<"User"> | string | null
    cpf?: StringFilter<"User"> | string
    dataNascimento?: StringFilter<"User"> | string
    estadoCivil?: StringNullableFilter<"User"> | string | null
    cnpj?: StringNullableFilter<"User"> | string | null
    ie?: StringNullableFilter<"User"> | string | null
    whatsapp?: StringNullableFilter<"User"> | string | null
    telefone?: StringNullableFilter<"User"> | string | null
    empresaAtuacao?: StringNullableFilter<"User"> | string | null
    profissao?: StringNullableFilter<"User"> | string | null
    endCidadeEstado?: StringNullableFilter<"User"> | string | null
    endRua?: StringNullableFilter<"User"> | string | null
    endNum?: StringNullableFilter<"User"> | string | null
    endCep?: StringNullableFilter<"User"> | string | null
    descricao?: StringNullableFilter<"User"> | string | null
    fotoPerfil?: StringNullableFilter<"User"> | string | null
    escolaId?: IntNullableFilter<"User"> | number | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    escola?: XOR<EscolaNullableScalarRelationFilter, EscolaWhereInput> | null
    escolasResponsavel?: EscolaListRelationFilter
    matriculas?: MatriculaListRelationFilter
    cursosInstrutor?: CursoListRelationFilter
  }, "id" | "email" | "login">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    login?: SortOrder
    password?: SortOrder
    tipoUser?: SortOrder
    rg?: SortOrderInput | SortOrder
    cpf?: SortOrder
    dataNascimento?: SortOrder
    estadoCivil?: SortOrderInput | SortOrder
    cnpj?: SortOrderInput | SortOrder
    ie?: SortOrderInput | SortOrder
    whatsapp?: SortOrderInput | SortOrder
    telefone?: SortOrderInput | SortOrder
    empresaAtuacao?: SortOrderInput | SortOrder
    profissao?: SortOrderInput | SortOrder
    endCidadeEstado?: SortOrderInput | SortOrder
    endRua?: SortOrderInput | SortOrder
    endNum?: SortOrderInput | SortOrder
    endCep?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    fotoPerfil?: SortOrderInput | SortOrder
    escolaId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    nome?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    login?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    tipoUser?: StringWithAggregatesFilter<"User"> | string
    rg?: StringNullableWithAggregatesFilter<"User"> | string | null
    cpf?: StringWithAggregatesFilter<"User"> | string
    dataNascimento?: StringWithAggregatesFilter<"User"> | string
    estadoCivil?: StringNullableWithAggregatesFilter<"User"> | string | null
    cnpj?: StringNullableWithAggregatesFilter<"User"> | string | null
    ie?: StringNullableWithAggregatesFilter<"User"> | string | null
    whatsapp?: StringNullableWithAggregatesFilter<"User"> | string | null
    telefone?: StringNullableWithAggregatesFilter<"User"> | string | null
    empresaAtuacao?: StringNullableWithAggregatesFilter<"User"> | string | null
    profissao?: StringNullableWithAggregatesFilter<"User"> | string | null
    endCidadeEstado?: StringNullableWithAggregatesFilter<"User"> | string | null
    endRua?: StringNullableWithAggregatesFilter<"User"> | string | null
    endNum?: StringNullableWithAggregatesFilter<"User"> | string | null
    endCep?: StringNullableWithAggregatesFilter<"User"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"User"> | string | null
    fotoPerfil?: StringNullableWithAggregatesFilter<"User"> | string | null
    escolaId?: IntNullableWithAggregatesFilter<"User"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type EscolaWhereInput = {
    AND?: EscolaWhereInput | EscolaWhereInput[]
    OR?: EscolaWhereInput[]
    NOT?: EscolaWhereInput | EscolaWhereInput[]
    id?: IntFilter<"Escola"> | number
    nome?: StringFilter<"Escola"> | string
    dataCadastro?: DateTimeFilter<"Escola"> | Date | string
    responsavelId?: IntNullableFilter<"Escola"> | number | null
    cidade?: StringNullableFilter<"Escola"> | string | null
    bairro?: StringNullableFilter<"Escola"> | string | null
    estado?: StringNullableFilter<"Escola"> | string | null
    rua?: StringNullableFilter<"Escola"> | string | null
    numero?: StringNullableFilter<"Escola"> | string | null
    descricao?: StringNullableFilter<"Escola"> | string | null
    createdAt?: DateTimeFilter<"Escola"> | Date | string
    updatedAt?: DateTimeFilter<"Escola"> | Date | string
    responsavel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    matriculas?: MatriculaListRelationFilter
  }

  export type EscolaOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    dataCadastro?: SortOrder
    responsavelId?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    responsavel?: UserOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
    matriculas?: MatriculaOrderByRelationAggregateInput
  }

  export type EscolaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nome?: string
    AND?: EscolaWhereInput | EscolaWhereInput[]
    OR?: EscolaWhereInput[]
    NOT?: EscolaWhereInput | EscolaWhereInput[]
    dataCadastro?: DateTimeFilter<"Escola"> | Date | string
    responsavelId?: IntNullableFilter<"Escola"> | number | null
    cidade?: StringNullableFilter<"Escola"> | string | null
    bairro?: StringNullableFilter<"Escola"> | string | null
    estado?: StringNullableFilter<"Escola"> | string | null
    rua?: StringNullableFilter<"Escola"> | string | null
    numero?: StringNullableFilter<"Escola"> | string | null
    descricao?: StringNullableFilter<"Escola"> | string | null
    createdAt?: DateTimeFilter<"Escola"> | Date | string
    updatedAt?: DateTimeFilter<"Escola"> | Date | string
    responsavel?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    users?: UserListRelationFilter
    matriculas?: MatriculaListRelationFilter
  }, "id" | "nome">

  export type EscolaOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    dataCadastro?: SortOrder
    responsavelId?: SortOrderInput | SortOrder
    cidade?: SortOrderInput | SortOrder
    bairro?: SortOrderInput | SortOrder
    estado?: SortOrderInput | SortOrder
    rua?: SortOrderInput | SortOrder
    numero?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EscolaCountOrderByAggregateInput
    _avg?: EscolaAvgOrderByAggregateInput
    _max?: EscolaMaxOrderByAggregateInput
    _min?: EscolaMinOrderByAggregateInput
    _sum?: EscolaSumOrderByAggregateInput
  }

  export type EscolaScalarWhereWithAggregatesInput = {
    AND?: EscolaScalarWhereWithAggregatesInput | EscolaScalarWhereWithAggregatesInput[]
    OR?: EscolaScalarWhereWithAggregatesInput[]
    NOT?: EscolaScalarWhereWithAggregatesInput | EscolaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Escola"> | number
    nome?: StringWithAggregatesFilter<"Escola"> | string
    dataCadastro?: DateTimeWithAggregatesFilter<"Escola"> | Date | string
    responsavelId?: IntNullableWithAggregatesFilter<"Escola"> | number | null
    cidade?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    bairro?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    estado?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    rua?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    numero?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"Escola"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Escola"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Escola"> | Date | string
  }

  export type MatriculaWhereInput = {
    AND?: MatriculaWhereInput | MatriculaWhereInput[]
    OR?: MatriculaWhereInput[]
    NOT?: MatriculaWhereInput | MatriculaWhereInput[]
    id?: IntFilter<"Matricula"> | number
    usuarioId?: IntFilter<"Matricula"> | number
    escolaId?: IntNullableFilter<"Matricula"> | number | null
    valorCurso?: FloatFilter<"Matricula"> | number
    numeroParcelas?: IntNullableFilter<"Matricula"> | number | null
    valorParcela?: FloatNullableFilter<"Matricula"> | number | null
    valorMensalidade?: FloatNullableFilter<"Matricula"> | number | null
    tipoCobranca?: StringFilter<"Matricula"> | string
    primeiraDataPagamento?: DateTimeNullableFilter<"Matricula"> | Date | string | null
    status?: StringFilter<"Matricula"> | string
    nivelIdioma?: StringNullableFilter<"Matricula"> | string | null
    horarioInicio?: StringNullableFilter<"Matricula"> | string | null
    horarioFim?: StringNullableFilter<"Matricula"> | string | null
    escolaridade?: StringNullableFilter<"Matricula"> | string | null
    localNascimento?: StringNullableFilter<"Matricula"> | string | null
    redeSocial?: StringNullableFilter<"Matricula"> | string | null
    nomePai?: StringNullableFilter<"Matricula"> | string | null
    contatoPai?: StringNullableFilter<"Matricula"> | string | null
    nomeMae?: StringNullableFilter<"Matricula"> | string | null
    contatoMae?: StringNullableFilter<"Matricula"> | string | null
    createdAt?: DateTimeFilter<"Matricula"> | Date | string
    updatedAt?: DateTimeFilter<"Matricula"> | Date | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    escola?: XOR<EscolaNullableScalarRelationFilter, EscolaWhereInput> | null
  }

  export type MatriculaOrderByWithRelationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrderInput | SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrderInput | SortOrder
    valorParcela?: SortOrderInput | SortOrder
    valorMensalidade?: SortOrderInput | SortOrder
    tipoCobranca?: SortOrder
    primeiraDataPagamento?: SortOrderInput | SortOrder
    status?: SortOrder
    nivelIdioma?: SortOrderInput | SortOrder
    horarioInicio?: SortOrderInput | SortOrder
    horarioFim?: SortOrderInput | SortOrder
    escolaridade?: SortOrderInput | SortOrder
    localNascimento?: SortOrderInput | SortOrder
    redeSocial?: SortOrderInput | SortOrder
    nomePai?: SortOrderInput | SortOrder
    contatoPai?: SortOrderInput | SortOrder
    nomeMae?: SortOrderInput | SortOrder
    contatoMae?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    usuario?: UserOrderByWithRelationInput
    escola?: EscolaOrderByWithRelationInput
  }

  export type MatriculaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MatriculaWhereInput | MatriculaWhereInput[]
    OR?: MatriculaWhereInput[]
    NOT?: MatriculaWhereInput | MatriculaWhereInput[]
    usuarioId?: IntFilter<"Matricula"> | number
    escolaId?: IntNullableFilter<"Matricula"> | number | null
    valorCurso?: FloatFilter<"Matricula"> | number
    numeroParcelas?: IntNullableFilter<"Matricula"> | number | null
    valorParcela?: FloatNullableFilter<"Matricula"> | number | null
    valorMensalidade?: FloatNullableFilter<"Matricula"> | number | null
    tipoCobranca?: StringFilter<"Matricula"> | string
    primeiraDataPagamento?: DateTimeNullableFilter<"Matricula"> | Date | string | null
    status?: StringFilter<"Matricula"> | string
    nivelIdioma?: StringNullableFilter<"Matricula"> | string | null
    horarioInicio?: StringNullableFilter<"Matricula"> | string | null
    horarioFim?: StringNullableFilter<"Matricula"> | string | null
    escolaridade?: StringNullableFilter<"Matricula"> | string | null
    localNascimento?: StringNullableFilter<"Matricula"> | string | null
    redeSocial?: StringNullableFilter<"Matricula"> | string | null
    nomePai?: StringNullableFilter<"Matricula"> | string | null
    contatoPai?: StringNullableFilter<"Matricula"> | string | null
    nomeMae?: StringNullableFilter<"Matricula"> | string | null
    contatoMae?: StringNullableFilter<"Matricula"> | string | null
    createdAt?: DateTimeFilter<"Matricula"> | Date | string
    updatedAt?: DateTimeFilter<"Matricula"> | Date | string
    usuario?: XOR<UserScalarRelationFilter, UserWhereInput>
    escola?: XOR<EscolaNullableScalarRelationFilter, EscolaWhereInput> | null
  }, "id">

  export type MatriculaOrderByWithAggregationInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrderInput | SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrderInput | SortOrder
    valorParcela?: SortOrderInput | SortOrder
    valorMensalidade?: SortOrderInput | SortOrder
    tipoCobranca?: SortOrder
    primeiraDataPagamento?: SortOrderInput | SortOrder
    status?: SortOrder
    nivelIdioma?: SortOrderInput | SortOrder
    horarioInicio?: SortOrderInput | SortOrder
    horarioFim?: SortOrderInput | SortOrder
    escolaridade?: SortOrderInput | SortOrder
    localNascimento?: SortOrderInput | SortOrder
    redeSocial?: SortOrderInput | SortOrder
    nomePai?: SortOrderInput | SortOrder
    contatoPai?: SortOrderInput | SortOrder
    nomeMae?: SortOrderInput | SortOrder
    contatoMae?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: MatriculaCountOrderByAggregateInput
    _avg?: MatriculaAvgOrderByAggregateInput
    _max?: MatriculaMaxOrderByAggregateInput
    _min?: MatriculaMinOrderByAggregateInput
    _sum?: MatriculaSumOrderByAggregateInput
  }

  export type MatriculaScalarWhereWithAggregatesInput = {
    AND?: MatriculaScalarWhereWithAggregatesInput | MatriculaScalarWhereWithAggregatesInput[]
    OR?: MatriculaScalarWhereWithAggregatesInput[]
    NOT?: MatriculaScalarWhereWithAggregatesInput | MatriculaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Matricula"> | number
    usuarioId?: IntWithAggregatesFilter<"Matricula"> | number
    escolaId?: IntNullableWithAggregatesFilter<"Matricula"> | number | null
    valorCurso?: FloatWithAggregatesFilter<"Matricula"> | number
    numeroParcelas?: IntNullableWithAggregatesFilter<"Matricula"> | number | null
    valorParcela?: FloatNullableWithAggregatesFilter<"Matricula"> | number | null
    valorMensalidade?: FloatNullableWithAggregatesFilter<"Matricula"> | number | null
    tipoCobranca?: StringWithAggregatesFilter<"Matricula"> | string
    primeiraDataPagamento?: DateTimeNullableWithAggregatesFilter<"Matricula"> | Date | string | null
    status?: StringWithAggregatesFilter<"Matricula"> | string
    nivelIdioma?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    horarioInicio?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    horarioFim?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    escolaridade?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    localNascimento?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    redeSocial?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    nomePai?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    contatoPai?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    nomeMae?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    contatoMae?: StringNullableWithAggregatesFilter<"Matricula"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Matricula"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Matricula"> | Date | string
  }

  export type CursoWhereInput = {
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    id?: IntFilter<"Curso"> | number
    titulo?: StringFilter<"Curso"> | string
    descricao?: StringNullableFilter<"Curso"> | string | null
    instrutorId?: IntNullableFilter<"Curso"> | number | null
    categoria?: StringNullableFilter<"Curso"> | string | null
    nivel?: StringNullableFilter<"Curso"> | string | null
    duracao?: StringNullableFilter<"Curso"> | string | null
    preco?: FloatNullableFilter<"Curso"> | number | null
    status?: StringFilter<"Curso"> | string
    dataPublicacao?: DateTimeFilter<"Curso"> | Date | string
    tags?: StringNullableFilter<"Curso"> | string | null
    arquivo?: StringNullableFilter<"Curso"> | string | null
    createdAt?: DateTimeFilter<"Curso"> | Date | string
    updatedAt?: DateTimeFilter<"Curso"> | Date | string
    instrutor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }

  export type CursoOrderByWithRelationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    instrutorId?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    nivel?: SortOrderInput | SortOrder
    duracao?: SortOrderInput | SortOrder
    preco?: SortOrderInput | SortOrder
    status?: SortOrder
    dataPublicacao?: SortOrder
    tags?: SortOrderInput | SortOrder
    arquivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    instrutor?: UserOrderByWithRelationInput
  }

  export type CursoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CursoWhereInput | CursoWhereInput[]
    OR?: CursoWhereInput[]
    NOT?: CursoWhereInput | CursoWhereInput[]
    titulo?: StringFilter<"Curso"> | string
    descricao?: StringNullableFilter<"Curso"> | string | null
    instrutorId?: IntNullableFilter<"Curso"> | number | null
    categoria?: StringNullableFilter<"Curso"> | string | null
    nivel?: StringNullableFilter<"Curso"> | string | null
    duracao?: StringNullableFilter<"Curso"> | string | null
    preco?: FloatNullableFilter<"Curso"> | number | null
    status?: StringFilter<"Curso"> | string
    dataPublicacao?: DateTimeFilter<"Curso"> | Date | string
    tags?: StringNullableFilter<"Curso"> | string | null
    arquivo?: StringNullableFilter<"Curso"> | string | null
    createdAt?: DateTimeFilter<"Curso"> | Date | string
    updatedAt?: DateTimeFilter<"Curso"> | Date | string
    instrutor?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
  }, "id">

  export type CursoOrderByWithAggregationInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrderInput | SortOrder
    instrutorId?: SortOrderInput | SortOrder
    categoria?: SortOrderInput | SortOrder
    nivel?: SortOrderInput | SortOrder
    duracao?: SortOrderInput | SortOrder
    preco?: SortOrderInput | SortOrder
    status?: SortOrder
    dataPublicacao?: SortOrder
    tags?: SortOrderInput | SortOrder
    arquivo?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CursoCountOrderByAggregateInput
    _avg?: CursoAvgOrderByAggregateInput
    _max?: CursoMaxOrderByAggregateInput
    _min?: CursoMinOrderByAggregateInput
    _sum?: CursoSumOrderByAggregateInput
  }

  export type CursoScalarWhereWithAggregatesInput = {
    AND?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    OR?: CursoScalarWhereWithAggregatesInput[]
    NOT?: CursoScalarWhereWithAggregatesInput | CursoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Curso"> | number
    titulo?: StringWithAggregatesFilter<"Curso"> | string
    descricao?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    instrutorId?: IntNullableWithAggregatesFilter<"Curso"> | number | null
    categoria?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    nivel?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    duracao?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    preco?: FloatNullableWithAggregatesFilter<"Curso"> | number | null
    status?: StringWithAggregatesFilter<"Curso"> | string
    dataPublicacao?: DateTimeWithAggregatesFilter<"Curso"> | Date | string
    tags?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    arquivo?: StringNullableWithAggregatesFilter<"Curso"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Curso"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Curso"> | Date | string
  }

  export type UserCreateInput = {
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escola?: EscolaCreateNestedOneWithoutUsersInput
    escolasResponsavel?: EscolaCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoCreateNestedManyWithoutInstrutorInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    escolaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escolasResponsavel?: EscolaUncheckedCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoUncheckedCreateNestedManyWithoutInstrutorInput
  }

  export type UserUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escola?: EscolaUpdateOneWithoutUsersNestedInput
    escolasResponsavel?: EscolaUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escolasResponsavel?: EscolaUncheckedUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUncheckedUpdateManyWithoutInstrutorNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    escolaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EscolaCreateInput = {
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    responsavel?: UserCreateNestedOneWithoutEscolasResponsavelInput
    users?: UserCreateNestedManyWithoutEscolaInput
    matriculas?: MatriculaCreateNestedManyWithoutEscolaInput
  }

  export type EscolaUncheckedCreateInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    responsavelId?: number | null
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutEscolaInput
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutEscolaInput
  }

  export type EscolaUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavel?: UserUpdateOneWithoutEscolasResponsavelNestedInput
    users?: UserUpdateManyWithoutEscolaNestedInput
    matriculas?: MatriculaUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavelId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutEscolaNestedInput
    matriculas?: MatriculaUncheckedUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaCreateManyInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    responsavelId?: number | null
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EscolaUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EscolaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavelId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaCreateInput = {
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UserCreateNestedOneWithoutMatriculasInput
    escola?: EscolaCreateNestedOneWithoutMatriculasInput
  }

  export type MatriculaUncheckedCreateInput = {
    id?: number
    usuarioId: number
    escolaId?: number | null
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaUpdateInput = {
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UserUpdateOneRequiredWithoutMatriculasNestedInput
    escola?: EscolaUpdateOneWithoutMatriculasNestedInput
  }

  export type MatriculaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaCreateManyInput = {
    id?: number
    usuarioId: number
    escolaId?: number | null
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaUpdateManyMutationInput = {
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoCreateInput = {
    titulo: string
    descricao?: string | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    instrutor?: UserCreateNestedOneWithoutCursosInstrutorInput
  }

  export type CursoUncheckedCreateInput = {
    id?: number
    titulo: string
    descricao?: string | null
    instrutorId?: number | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CursoUpdateInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    instrutor?: UserUpdateOneWithoutCursosInstrutorNestedInput
  }

  export type CursoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    instrutorId?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoCreateManyInput = {
    id?: number
    titulo: string
    descricao?: string | null
    instrutorId?: number | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CursoUpdateManyMutationInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    instrutorId?: NullableIntFieldUpdateOperationsInput | number | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EscolaNullableScalarRelationFilter = {
    is?: EscolaWhereInput | null
    isNot?: EscolaWhereInput | null
  }

  export type EscolaListRelationFilter = {
    every?: EscolaWhereInput
    some?: EscolaWhereInput
    none?: EscolaWhereInput
  }

  export type MatriculaListRelationFilter = {
    every?: MatriculaWhereInput
    some?: MatriculaWhereInput
    none?: MatriculaWhereInput
  }

  export type CursoListRelationFilter = {
    every?: CursoWhereInput
    some?: CursoWhereInput
    none?: CursoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EscolaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MatriculaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CursoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    login?: SortOrder
    password?: SortOrder
    tipoUser?: SortOrder
    rg?: SortOrder
    cpf?: SortOrder
    dataNascimento?: SortOrder
    estadoCivil?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    whatsapp?: SortOrder
    telefone?: SortOrder
    empresaAtuacao?: SortOrder
    profissao?: SortOrder
    endCidadeEstado?: SortOrder
    endRua?: SortOrder
    endNum?: SortOrder
    endCep?: SortOrder
    descricao?: SortOrder
    fotoPerfil?: SortOrder
    escolaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    escolaId?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    login?: SortOrder
    password?: SortOrder
    tipoUser?: SortOrder
    rg?: SortOrder
    cpf?: SortOrder
    dataNascimento?: SortOrder
    estadoCivil?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    whatsapp?: SortOrder
    telefone?: SortOrder
    empresaAtuacao?: SortOrder
    profissao?: SortOrder
    endCidadeEstado?: SortOrder
    endRua?: SortOrder
    endNum?: SortOrder
    endCep?: SortOrder
    descricao?: SortOrder
    fotoPerfil?: SortOrder
    escolaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    login?: SortOrder
    password?: SortOrder
    tipoUser?: SortOrder
    rg?: SortOrder
    cpf?: SortOrder
    dataNascimento?: SortOrder
    estadoCivil?: SortOrder
    cnpj?: SortOrder
    ie?: SortOrder
    whatsapp?: SortOrder
    telefone?: SortOrder
    empresaAtuacao?: SortOrder
    profissao?: SortOrder
    endCidadeEstado?: SortOrder
    endRua?: SortOrder
    endNum?: SortOrder
    endCep?: SortOrder
    descricao?: SortOrder
    fotoPerfil?: SortOrder
    escolaId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    escolaId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EscolaCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    dataCadastro?: SortOrder
    responsavelId?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EscolaAvgOrderByAggregateInput = {
    id?: SortOrder
    responsavelId?: SortOrder
  }

  export type EscolaMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    dataCadastro?: SortOrder
    responsavelId?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EscolaMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    dataCadastro?: SortOrder
    responsavelId?: SortOrder
    cidade?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    rua?: SortOrder
    numero?: SortOrder
    descricao?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EscolaSumOrderByAggregateInput = {
    id?: SortOrder
    responsavelId?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type MatriculaCountOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrder
    valorParcela?: SortOrder
    valorMensalidade?: SortOrder
    tipoCobranca?: SortOrder
    primeiraDataPagamento?: SortOrder
    status?: SortOrder
    nivelIdioma?: SortOrder
    horarioInicio?: SortOrder
    horarioFim?: SortOrder
    escolaridade?: SortOrder
    localNascimento?: SortOrder
    redeSocial?: SortOrder
    nomePai?: SortOrder
    contatoPai?: SortOrder
    nomeMae?: SortOrder
    contatoMae?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MatriculaAvgOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrder
    valorParcela?: SortOrder
    valorMensalidade?: SortOrder
  }

  export type MatriculaMaxOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrder
    valorParcela?: SortOrder
    valorMensalidade?: SortOrder
    tipoCobranca?: SortOrder
    primeiraDataPagamento?: SortOrder
    status?: SortOrder
    nivelIdioma?: SortOrder
    horarioInicio?: SortOrder
    horarioFim?: SortOrder
    escolaridade?: SortOrder
    localNascimento?: SortOrder
    redeSocial?: SortOrder
    nomePai?: SortOrder
    contatoPai?: SortOrder
    nomeMae?: SortOrder
    contatoMae?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MatriculaMinOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrder
    valorParcela?: SortOrder
    valorMensalidade?: SortOrder
    tipoCobranca?: SortOrder
    primeiraDataPagamento?: SortOrder
    status?: SortOrder
    nivelIdioma?: SortOrder
    horarioInicio?: SortOrder
    horarioFim?: SortOrder
    escolaridade?: SortOrder
    localNascimento?: SortOrder
    redeSocial?: SortOrder
    nomePai?: SortOrder
    contatoPai?: SortOrder
    nomeMae?: SortOrder
    contatoMae?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type MatriculaSumOrderByAggregateInput = {
    id?: SortOrder
    usuarioId?: SortOrder
    escolaId?: SortOrder
    valorCurso?: SortOrder
    numeroParcelas?: SortOrder
    valorParcela?: SortOrder
    valorMensalidade?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type CursoCountOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    instrutorId?: SortOrder
    categoria?: SortOrder
    nivel?: SortOrder
    duracao?: SortOrder
    preco?: SortOrder
    status?: SortOrder
    dataPublicacao?: SortOrder
    tags?: SortOrder
    arquivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CursoAvgOrderByAggregateInput = {
    id?: SortOrder
    instrutorId?: SortOrder
    preco?: SortOrder
  }

  export type CursoMaxOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    instrutorId?: SortOrder
    categoria?: SortOrder
    nivel?: SortOrder
    duracao?: SortOrder
    preco?: SortOrder
    status?: SortOrder
    dataPublicacao?: SortOrder
    tags?: SortOrder
    arquivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CursoMinOrderByAggregateInput = {
    id?: SortOrder
    titulo?: SortOrder
    descricao?: SortOrder
    instrutorId?: SortOrder
    categoria?: SortOrder
    nivel?: SortOrder
    duracao?: SortOrder
    preco?: SortOrder
    status?: SortOrder
    dataPublicacao?: SortOrder
    tags?: SortOrder
    arquivo?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CursoSumOrderByAggregateInput = {
    id?: SortOrder
    instrutorId?: SortOrder
    preco?: SortOrder
  }

  export type EscolaCreateNestedOneWithoutUsersInput = {
    create?: XOR<EscolaCreateWithoutUsersInput, EscolaUncheckedCreateWithoutUsersInput>
    connectOrCreate?: EscolaCreateOrConnectWithoutUsersInput
    connect?: EscolaWhereUniqueInput
  }

  export type EscolaCreateNestedManyWithoutResponsavelInput = {
    create?: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput> | EscolaCreateWithoutResponsavelInput[] | EscolaUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: EscolaCreateOrConnectWithoutResponsavelInput | EscolaCreateOrConnectWithoutResponsavelInput[]
    createMany?: EscolaCreateManyResponsavelInputEnvelope
    connect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
  }

  export type MatriculaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput> | MatriculaCreateWithoutUsuarioInput[] | MatriculaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutUsuarioInput | MatriculaCreateOrConnectWithoutUsuarioInput[]
    createMany?: MatriculaCreateManyUsuarioInputEnvelope
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
  }

  export type CursoCreateNestedManyWithoutInstrutorInput = {
    create?: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput> | CursoCreateWithoutInstrutorInput[] | CursoUncheckedCreateWithoutInstrutorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutInstrutorInput | CursoCreateOrConnectWithoutInstrutorInput[]
    createMany?: CursoCreateManyInstrutorInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type EscolaUncheckedCreateNestedManyWithoutResponsavelInput = {
    create?: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput> | EscolaCreateWithoutResponsavelInput[] | EscolaUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: EscolaCreateOrConnectWithoutResponsavelInput | EscolaCreateOrConnectWithoutResponsavelInput[]
    createMany?: EscolaCreateManyResponsavelInputEnvelope
    connect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
  }

  export type MatriculaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput> | MatriculaCreateWithoutUsuarioInput[] | MatriculaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutUsuarioInput | MatriculaCreateOrConnectWithoutUsuarioInput[]
    createMany?: MatriculaCreateManyUsuarioInputEnvelope
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
  }

  export type CursoUncheckedCreateNestedManyWithoutInstrutorInput = {
    create?: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput> | CursoCreateWithoutInstrutorInput[] | CursoUncheckedCreateWithoutInstrutorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutInstrutorInput | CursoCreateOrConnectWithoutInstrutorInput[]
    createMany?: CursoCreateManyInstrutorInputEnvelope
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EscolaUpdateOneWithoutUsersNestedInput = {
    create?: XOR<EscolaCreateWithoutUsersInput, EscolaUncheckedCreateWithoutUsersInput>
    connectOrCreate?: EscolaCreateOrConnectWithoutUsersInput
    upsert?: EscolaUpsertWithoutUsersInput
    disconnect?: EscolaWhereInput | boolean
    delete?: EscolaWhereInput | boolean
    connect?: EscolaWhereUniqueInput
    update?: XOR<XOR<EscolaUpdateToOneWithWhereWithoutUsersInput, EscolaUpdateWithoutUsersInput>, EscolaUncheckedUpdateWithoutUsersInput>
  }

  export type EscolaUpdateManyWithoutResponsavelNestedInput = {
    create?: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput> | EscolaCreateWithoutResponsavelInput[] | EscolaUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: EscolaCreateOrConnectWithoutResponsavelInput | EscolaCreateOrConnectWithoutResponsavelInput[]
    upsert?: EscolaUpsertWithWhereUniqueWithoutResponsavelInput | EscolaUpsertWithWhereUniqueWithoutResponsavelInput[]
    createMany?: EscolaCreateManyResponsavelInputEnvelope
    set?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    disconnect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    delete?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    connect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    update?: EscolaUpdateWithWhereUniqueWithoutResponsavelInput | EscolaUpdateWithWhereUniqueWithoutResponsavelInput[]
    updateMany?: EscolaUpdateManyWithWhereWithoutResponsavelInput | EscolaUpdateManyWithWhereWithoutResponsavelInput[]
    deleteMany?: EscolaScalarWhereInput | EscolaScalarWhereInput[]
  }

  export type MatriculaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput> | MatriculaCreateWithoutUsuarioInput[] | MatriculaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutUsuarioInput | MatriculaCreateOrConnectWithoutUsuarioInput[]
    upsert?: MatriculaUpsertWithWhereUniqueWithoutUsuarioInput | MatriculaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MatriculaCreateManyUsuarioInputEnvelope
    set?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    disconnect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    delete?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    update?: MatriculaUpdateWithWhereUniqueWithoutUsuarioInput | MatriculaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MatriculaUpdateManyWithWhereWithoutUsuarioInput | MatriculaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
  }

  export type CursoUpdateManyWithoutInstrutorNestedInput = {
    create?: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput> | CursoCreateWithoutInstrutorInput[] | CursoUncheckedCreateWithoutInstrutorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutInstrutorInput | CursoCreateOrConnectWithoutInstrutorInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutInstrutorInput | CursoUpsertWithWhereUniqueWithoutInstrutorInput[]
    createMany?: CursoCreateManyInstrutorInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutInstrutorInput | CursoUpdateWithWhereUniqueWithoutInstrutorInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutInstrutorInput | CursoUpdateManyWithWhereWithoutInstrutorInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EscolaUncheckedUpdateManyWithoutResponsavelNestedInput = {
    create?: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput> | EscolaCreateWithoutResponsavelInput[] | EscolaUncheckedCreateWithoutResponsavelInput[]
    connectOrCreate?: EscolaCreateOrConnectWithoutResponsavelInput | EscolaCreateOrConnectWithoutResponsavelInput[]
    upsert?: EscolaUpsertWithWhereUniqueWithoutResponsavelInput | EscolaUpsertWithWhereUniqueWithoutResponsavelInput[]
    createMany?: EscolaCreateManyResponsavelInputEnvelope
    set?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    disconnect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    delete?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    connect?: EscolaWhereUniqueInput | EscolaWhereUniqueInput[]
    update?: EscolaUpdateWithWhereUniqueWithoutResponsavelInput | EscolaUpdateWithWhereUniqueWithoutResponsavelInput[]
    updateMany?: EscolaUpdateManyWithWhereWithoutResponsavelInput | EscolaUpdateManyWithWhereWithoutResponsavelInput[]
    deleteMany?: EscolaScalarWhereInput | EscolaScalarWhereInput[]
  }

  export type MatriculaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput> | MatriculaCreateWithoutUsuarioInput[] | MatriculaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutUsuarioInput | MatriculaCreateOrConnectWithoutUsuarioInput[]
    upsert?: MatriculaUpsertWithWhereUniqueWithoutUsuarioInput | MatriculaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: MatriculaCreateManyUsuarioInputEnvelope
    set?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    disconnect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    delete?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    update?: MatriculaUpdateWithWhereUniqueWithoutUsuarioInput | MatriculaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: MatriculaUpdateManyWithWhereWithoutUsuarioInput | MatriculaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
  }

  export type CursoUncheckedUpdateManyWithoutInstrutorNestedInput = {
    create?: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput> | CursoCreateWithoutInstrutorInput[] | CursoUncheckedCreateWithoutInstrutorInput[]
    connectOrCreate?: CursoCreateOrConnectWithoutInstrutorInput | CursoCreateOrConnectWithoutInstrutorInput[]
    upsert?: CursoUpsertWithWhereUniqueWithoutInstrutorInput | CursoUpsertWithWhereUniqueWithoutInstrutorInput[]
    createMany?: CursoCreateManyInstrutorInputEnvelope
    set?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    disconnect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    delete?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    connect?: CursoWhereUniqueInput | CursoWhereUniqueInput[]
    update?: CursoUpdateWithWhereUniqueWithoutInstrutorInput | CursoUpdateWithWhereUniqueWithoutInstrutorInput[]
    updateMany?: CursoUpdateManyWithWhereWithoutInstrutorInput | CursoUpdateManyWithWhereWithoutInstrutorInput[]
    deleteMany?: CursoScalarWhereInput | CursoScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutEscolasResponsavelInput = {
    create?: XOR<UserCreateWithoutEscolasResponsavelInput, UserUncheckedCreateWithoutEscolasResponsavelInput>
    connectOrCreate?: UserCreateOrConnectWithoutEscolasResponsavelInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutEscolaInput = {
    create?: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput> | UserCreateWithoutEscolaInput[] | UserUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutEscolaInput | UserCreateOrConnectWithoutEscolaInput[]
    createMany?: UserCreateManyEscolaInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MatriculaCreateNestedManyWithoutEscolaInput = {
    create?: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput> | MatriculaCreateWithoutEscolaInput[] | MatriculaUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutEscolaInput | MatriculaCreateOrConnectWithoutEscolaInput[]
    createMany?: MatriculaCreateManyEscolaInputEnvelope
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutEscolaInput = {
    create?: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput> | UserCreateWithoutEscolaInput[] | UserUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutEscolaInput | UserCreateOrConnectWithoutEscolaInput[]
    createMany?: UserCreateManyEscolaInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type MatriculaUncheckedCreateNestedManyWithoutEscolaInput = {
    create?: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput> | MatriculaCreateWithoutEscolaInput[] | MatriculaUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutEscolaInput | MatriculaCreateOrConnectWithoutEscolaInput[]
    createMany?: MatriculaCreateManyEscolaInputEnvelope
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
  }

  export type UserUpdateOneWithoutEscolasResponsavelNestedInput = {
    create?: XOR<UserCreateWithoutEscolasResponsavelInput, UserUncheckedCreateWithoutEscolasResponsavelInput>
    connectOrCreate?: UserCreateOrConnectWithoutEscolasResponsavelInput
    upsert?: UserUpsertWithoutEscolasResponsavelInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutEscolasResponsavelInput, UserUpdateWithoutEscolasResponsavelInput>, UserUncheckedUpdateWithoutEscolasResponsavelInput>
  }

  export type UserUpdateManyWithoutEscolaNestedInput = {
    create?: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput> | UserCreateWithoutEscolaInput[] | UserUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutEscolaInput | UserCreateOrConnectWithoutEscolaInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutEscolaInput | UserUpsertWithWhereUniqueWithoutEscolaInput[]
    createMany?: UserCreateManyEscolaInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutEscolaInput | UserUpdateWithWhereUniqueWithoutEscolaInput[]
    updateMany?: UserUpdateManyWithWhereWithoutEscolaInput | UserUpdateManyWithWhereWithoutEscolaInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MatriculaUpdateManyWithoutEscolaNestedInput = {
    create?: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput> | MatriculaCreateWithoutEscolaInput[] | MatriculaUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutEscolaInput | MatriculaCreateOrConnectWithoutEscolaInput[]
    upsert?: MatriculaUpsertWithWhereUniqueWithoutEscolaInput | MatriculaUpsertWithWhereUniqueWithoutEscolaInput[]
    createMany?: MatriculaCreateManyEscolaInputEnvelope
    set?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    disconnect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    delete?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    update?: MatriculaUpdateWithWhereUniqueWithoutEscolaInput | MatriculaUpdateWithWhereUniqueWithoutEscolaInput[]
    updateMany?: MatriculaUpdateManyWithWhereWithoutEscolaInput | MatriculaUpdateManyWithWhereWithoutEscolaInput[]
    deleteMany?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutEscolaNestedInput = {
    create?: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput> | UserCreateWithoutEscolaInput[] | UserUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: UserCreateOrConnectWithoutEscolaInput | UserCreateOrConnectWithoutEscolaInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutEscolaInput | UserUpsertWithWhereUniqueWithoutEscolaInput[]
    createMany?: UserCreateManyEscolaInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutEscolaInput | UserUpdateWithWhereUniqueWithoutEscolaInput[]
    updateMany?: UserUpdateManyWithWhereWithoutEscolaInput | UserUpdateManyWithWhereWithoutEscolaInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type MatriculaUncheckedUpdateManyWithoutEscolaNestedInput = {
    create?: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput> | MatriculaCreateWithoutEscolaInput[] | MatriculaUncheckedCreateWithoutEscolaInput[]
    connectOrCreate?: MatriculaCreateOrConnectWithoutEscolaInput | MatriculaCreateOrConnectWithoutEscolaInput[]
    upsert?: MatriculaUpsertWithWhereUniqueWithoutEscolaInput | MatriculaUpsertWithWhereUniqueWithoutEscolaInput[]
    createMany?: MatriculaCreateManyEscolaInputEnvelope
    set?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    disconnect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    delete?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    connect?: MatriculaWhereUniqueInput | MatriculaWhereUniqueInput[]
    update?: MatriculaUpdateWithWhereUniqueWithoutEscolaInput | MatriculaUpdateWithWhereUniqueWithoutEscolaInput[]
    updateMany?: MatriculaUpdateManyWithWhereWithoutEscolaInput | MatriculaUpdateManyWithWhereWithoutEscolaInput[]
    deleteMany?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutMatriculasInput = {
    create?: XOR<UserCreateWithoutMatriculasInput, UserUncheckedCreateWithoutMatriculasInput>
    connectOrCreate?: UserCreateOrConnectWithoutMatriculasInput
    connect?: UserWhereUniqueInput
  }

  export type EscolaCreateNestedOneWithoutMatriculasInput = {
    create?: XOR<EscolaCreateWithoutMatriculasInput, EscolaUncheckedCreateWithoutMatriculasInput>
    connectOrCreate?: EscolaCreateOrConnectWithoutMatriculasInput
    connect?: EscolaWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutMatriculasNestedInput = {
    create?: XOR<UserCreateWithoutMatriculasInput, UserUncheckedCreateWithoutMatriculasInput>
    connectOrCreate?: UserCreateOrConnectWithoutMatriculasInput
    upsert?: UserUpsertWithoutMatriculasInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMatriculasInput, UserUpdateWithoutMatriculasInput>, UserUncheckedUpdateWithoutMatriculasInput>
  }

  export type EscolaUpdateOneWithoutMatriculasNestedInput = {
    create?: XOR<EscolaCreateWithoutMatriculasInput, EscolaUncheckedCreateWithoutMatriculasInput>
    connectOrCreate?: EscolaCreateOrConnectWithoutMatriculasInput
    upsert?: EscolaUpsertWithoutMatriculasInput
    disconnect?: EscolaWhereInput | boolean
    delete?: EscolaWhereInput | boolean
    connect?: EscolaWhereUniqueInput
    update?: XOR<XOR<EscolaUpdateToOneWithWhereWithoutMatriculasInput, EscolaUpdateWithoutMatriculasInput>, EscolaUncheckedUpdateWithoutMatriculasInput>
  }

  export type UserCreateNestedOneWithoutCursosInstrutorInput = {
    create?: XOR<UserCreateWithoutCursosInstrutorInput, UserUncheckedCreateWithoutCursosInstrutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosInstrutorInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneWithoutCursosInstrutorNestedInput = {
    create?: XOR<UserCreateWithoutCursosInstrutorInput, UserUncheckedCreateWithoutCursosInstrutorInput>
    connectOrCreate?: UserCreateOrConnectWithoutCursosInstrutorInput
    upsert?: UserUpsertWithoutCursosInstrutorInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCursosInstrutorInput, UserUpdateWithoutCursosInstrutorInput>, UserUncheckedUpdateWithoutCursosInstrutorInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EscolaCreateWithoutUsersInput = {
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    responsavel?: UserCreateNestedOneWithoutEscolasResponsavelInput
    matriculas?: MatriculaCreateNestedManyWithoutEscolaInput
  }

  export type EscolaUncheckedCreateWithoutUsersInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    responsavelId?: number | null
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutEscolaInput
  }

  export type EscolaCreateOrConnectWithoutUsersInput = {
    where: EscolaWhereUniqueInput
    create: XOR<EscolaCreateWithoutUsersInput, EscolaUncheckedCreateWithoutUsersInput>
  }

  export type EscolaCreateWithoutResponsavelInput = {
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserCreateNestedManyWithoutEscolaInput
    matriculas?: MatriculaCreateNestedManyWithoutEscolaInput
  }

  export type EscolaUncheckedCreateWithoutResponsavelInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutEscolaInput
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutEscolaInput
  }

  export type EscolaCreateOrConnectWithoutResponsavelInput = {
    where: EscolaWhereUniqueInput
    create: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput>
  }

  export type EscolaCreateManyResponsavelInputEnvelope = {
    data: EscolaCreateManyResponsavelInput | EscolaCreateManyResponsavelInput[]
    skipDuplicates?: boolean
  }

  export type MatriculaCreateWithoutUsuarioInput = {
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escola?: EscolaCreateNestedOneWithoutMatriculasInput
  }

  export type MatriculaUncheckedCreateWithoutUsuarioInput = {
    id?: number
    escolaId?: number | null
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaCreateOrConnectWithoutUsuarioInput = {
    where: MatriculaWhereUniqueInput
    create: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput>
  }

  export type MatriculaCreateManyUsuarioInputEnvelope = {
    data: MatriculaCreateManyUsuarioInput | MatriculaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type CursoCreateWithoutInstrutorInput = {
    titulo: string
    descricao?: string | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CursoUncheckedCreateWithoutInstrutorInput = {
    id?: number
    titulo: string
    descricao?: string | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CursoCreateOrConnectWithoutInstrutorInput = {
    where: CursoWhereUniqueInput
    create: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput>
  }

  export type CursoCreateManyInstrutorInputEnvelope = {
    data: CursoCreateManyInstrutorInput | CursoCreateManyInstrutorInput[]
    skipDuplicates?: boolean
  }

  export type EscolaUpsertWithoutUsersInput = {
    update: XOR<EscolaUpdateWithoutUsersInput, EscolaUncheckedUpdateWithoutUsersInput>
    create: XOR<EscolaCreateWithoutUsersInput, EscolaUncheckedCreateWithoutUsersInput>
    where?: EscolaWhereInput
  }

  export type EscolaUpdateToOneWithWhereWithoutUsersInput = {
    where?: EscolaWhereInput
    data: XOR<EscolaUpdateWithoutUsersInput, EscolaUncheckedUpdateWithoutUsersInput>
  }

  export type EscolaUpdateWithoutUsersInput = {
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavel?: UserUpdateOneWithoutEscolasResponsavelNestedInput
    matriculas?: MatriculaUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavelId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    matriculas?: MatriculaUncheckedUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUpsertWithWhereUniqueWithoutResponsavelInput = {
    where: EscolaWhereUniqueInput
    update: XOR<EscolaUpdateWithoutResponsavelInput, EscolaUncheckedUpdateWithoutResponsavelInput>
    create: XOR<EscolaCreateWithoutResponsavelInput, EscolaUncheckedCreateWithoutResponsavelInput>
  }

  export type EscolaUpdateWithWhereUniqueWithoutResponsavelInput = {
    where: EscolaWhereUniqueInput
    data: XOR<EscolaUpdateWithoutResponsavelInput, EscolaUncheckedUpdateWithoutResponsavelInput>
  }

  export type EscolaUpdateManyWithWhereWithoutResponsavelInput = {
    where: EscolaScalarWhereInput
    data: XOR<EscolaUpdateManyMutationInput, EscolaUncheckedUpdateManyWithoutResponsavelInput>
  }

  export type EscolaScalarWhereInput = {
    AND?: EscolaScalarWhereInput | EscolaScalarWhereInput[]
    OR?: EscolaScalarWhereInput[]
    NOT?: EscolaScalarWhereInput | EscolaScalarWhereInput[]
    id?: IntFilter<"Escola"> | number
    nome?: StringFilter<"Escola"> | string
    dataCadastro?: DateTimeFilter<"Escola"> | Date | string
    responsavelId?: IntNullableFilter<"Escola"> | number | null
    cidade?: StringNullableFilter<"Escola"> | string | null
    bairro?: StringNullableFilter<"Escola"> | string | null
    estado?: StringNullableFilter<"Escola"> | string | null
    rua?: StringNullableFilter<"Escola"> | string | null
    numero?: StringNullableFilter<"Escola"> | string | null
    descricao?: StringNullableFilter<"Escola"> | string | null
    createdAt?: DateTimeFilter<"Escola"> | Date | string
    updatedAt?: DateTimeFilter<"Escola"> | Date | string
  }

  export type MatriculaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: MatriculaWhereUniqueInput
    update: XOR<MatriculaUpdateWithoutUsuarioInput, MatriculaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<MatriculaCreateWithoutUsuarioInput, MatriculaUncheckedCreateWithoutUsuarioInput>
  }

  export type MatriculaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: MatriculaWhereUniqueInput
    data: XOR<MatriculaUpdateWithoutUsuarioInput, MatriculaUncheckedUpdateWithoutUsuarioInput>
  }

  export type MatriculaUpdateManyWithWhereWithoutUsuarioInput = {
    where: MatriculaScalarWhereInput
    data: XOR<MatriculaUpdateManyMutationInput, MatriculaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type MatriculaScalarWhereInput = {
    AND?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
    OR?: MatriculaScalarWhereInput[]
    NOT?: MatriculaScalarWhereInput | MatriculaScalarWhereInput[]
    id?: IntFilter<"Matricula"> | number
    usuarioId?: IntFilter<"Matricula"> | number
    escolaId?: IntNullableFilter<"Matricula"> | number | null
    valorCurso?: FloatFilter<"Matricula"> | number
    numeroParcelas?: IntNullableFilter<"Matricula"> | number | null
    valorParcela?: FloatNullableFilter<"Matricula"> | number | null
    valorMensalidade?: FloatNullableFilter<"Matricula"> | number | null
    tipoCobranca?: StringFilter<"Matricula"> | string
    primeiraDataPagamento?: DateTimeNullableFilter<"Matricula"> | Date | string | null
    status?: StringFilter<"Matricula"> | string
    nivelIdioma?: StringNullableFilter<"Matricula"> | string | null
    horarioInicio?: StringNullableFilter<"Matricula"> | string | null
    horarioFim?: StringNullableFilter<"Matricula"> | string | null
    escolaridade?: StringNullableFilter<"Matricula"> | string | null
    localNascimento?: StringNullableFilter<"Matricula"> | string | null
    redeSocial?: StringNullableFilter<"Matricula"> | string | null
    nomePai?: StringNullableFilter<"Matricula"> | string | null
    contatoPai?: StringNullableFilter<"Matricula"> | string | null
    nomeMae?: StringNullableFilter<"Matricula"> | string | null
    contatoMae?: StringNullableFilter<"Matricula"> | string | null
    createdAt?: DateTimeFilter<"Matricula"> | Date | string
    updatedAt?: DateTimeFilter<"Matricula"> | Date | string
  }

  export type CursoUpsertWithWhereUniqueWithoutInstrutorInput = {
    where: CursoWhereUniqueInput
    update: XOR<CursoUpdateWithoutInstrutorInput, CursoUncheckedUpdateWithoutInstrutorInput>
    create: XOR<CursoCreateWithoutInstrutorInput, CursoUncheckedCreateWithoutInstrutorInput>
  }

  export type CursoUpdateWithWhereUniqueWithoutInstrutorInput = {
    where: CursoWhereUniqueInput
    data: XOR<CursoUpdateWithoutInstrutorInput, CursoUncheckedUpdateWithoutInstrutorInput>
  }

  export type CursoUpdateManyWithWhereWithoutInstrutorInput = {
    where: CursoScalarWhereInput
    data: XOR<CursoUpdateManyMutationInput, CursoUncheckedUpdateManyWithoutInstrutorInput>
  }

  export type CursoScalarWhereInput = {
    AND?: CursoScalarWhereInput | CursoScalarWhereInput[]
    OR?: CursoScalarWhereInput[]
    NOT?: CursoScalarWhereInput | CursoScalarWhereInput[]
    id?: IntFilter<"Curso"> | number
    titulo?: StringFilter<"Curso"> | string
    descricao?: StringNullableFilter<"Curso"> | string | null
    instrutorId?: IntNullableFilter<"Curso"> | number | null
    categoria?: StringNullableFilter<"Curso"> | string | null
    nivel?: StringNullableFilter<"Curso"> | string | null
    duracao?: StringNullableFilter<"Curso"> | string | null
    preco?: FloatNullableFilter<"Curso"> | number | null
    status?: StringFilter<"Curso"> | string
    dataPublicacao?: DateTimeFilter<"Curso"> | Date | string
    tags?: StringNullableFilter<"Curso"> | string | null
    arquivo?: StringNullableFilter<"Curso"> | string | null
    createdAt?: DateTimeFilter<"Curso"> | Date | string
    updatedAt?: DateTimeFilter<"Curso"> | Date | string
  }

  export type UserCreateWithoutEscolasResponsavelInput = {
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escola?: EscolaCreateNestedOneWithoutUsersInput
    matriculas?: MatriculaCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoCreateNestedManyWithoutInstrutorInput
  }

  export type UserUncheckedCreateWithoutEscolasResponsavelInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    escolaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoUncheckedCreateNestedManyWithoutInstrutorInput
  }

  export type UserCreateOrConnectWithoutEscolasResponsavelInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEscolasResponsavelInput, UserUncheckedCreateWithoutEscolasResponsavelInput>
  }

  export type UserCreateWithoutEscolaInput = {
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escolasResponsavel?: EscolaCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoCreateNestedManyWithoutInstrutorInput
  }

  export type UserUncheckedCreateWithoutEscolaInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escolasResponsavel?: EscolaUncheckedCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutUsuarioInput
    cursosInstrutor?: CursoUncheckedCreateNestedManyWithoutInstrutorInput
  }

  export type UserCreateOrConnectWithoutEscolaInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput>
  }

  export type UserCreateManyEscolaInputEnvelope = {
    data: UserCreateManyEscolaInput | UserCreateManyEscolaInput[]
    skipDuplicates?: boolean
  }

  export type MatriculaCreateWithoutEscolaInput = {
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    usuario: UserCreateNestedOneWithoutMatriculasInput
  }

  export type MatriculaUncheckedCreateWithoutEscolaInput = {
    id?: number
    usuarioId: number
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaCreateOrConnectWithoutEscolaInput = {
    where: MatriculaWhereUniqueInput
    create: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput>
  }

  export type MatriculaCreateManyEscolaInputEnvelope = {
    data: MatriculaCreateManyEscolaInput | MatriculaCreateManyEscolaInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutEscolasResponsavelInput = {
    update: XOR<UserUpdateWithoutEscolasResponsavelInput, UserUncheckedUpdateWithoutEscolasResponsavelInput>
    create: XOR<UserCreateWithoutEscolasResponsavelInput, UserUncheckedCreateWithoutEscolasResponsavelInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutEscolasResponsavelInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutEscolasResponsavelInput, UserUncheckedUpdateWithoutEscolasResponsavelInput>
  }

  export type UserUpdateWithoutEscolasResponsavelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escola?: EscolaUpdateOneWithoutUsersNestedInput
    matriculas?: MatriculaUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUncheckedUpdateWithoutEscolasResponsavelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    matriculas?: MatriculaUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUncheckedUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutEscolaInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutEscolaInput, UserUncheckedUpdateWithoutEscolaInput>
    create: XOR<UserCreateWithoutEscolaInput, UserUncheckedCreateWithoutEscolaInput>
  }

  export type UserUpdateWithWhereUniqueWithoutEscolaInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutEscolaInput, UserUncheckedUpdateWithoutEscolaInput>
  }

  export type UserUpdateManyWithWhereWithoutEscolaInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutEscolaInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: IntFilter<"User"> | number
    nome?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    login?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    tipoUser?: StringFilter<"User"> | string
    rg?: StringNullableFilter<"User"> | string | null
    cpf?: StringFilter<"User"> | string
    dataNascimento?: StringFilter<"User"> | string
    estadoCivil?: StringNullableFilter<"User"> | string | null
    cnpj?: StringNullableFilter<"User"> | string | null
    ie?: StringNullableFilter<"User"> | string | null
    whatsapp?: StringNullableFilter<"User"> | string | null
    telefone?: StringNullableFilter<"User"> | string | null
    empresaAtuacao?: StringNullableFilter<"User"> | string | null
    profissao?: StringNullableFilter<"User"> | string | null
    endCidadeEstado?: StringNullableFilter<"User"> | string | null
    endRua?: StringNullableFilter<"User"> | string | null
    endNum?: StringNullableFilter<"User"> | string | null
    endCep?: StringNullableFilter<"User"> | string | null
    descricao?: StringNullableFilter<"User"> | string | null
    fotoPerfil?: StringNullableFilter<"User"> | string | null
    escolaId?: IntNullableFilter<"User"> | number | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type MatriculaUpsertWithWhereUniqueWithoutEscolaInput = {
    where: MatriculaWhereUniqueInput
    update: XOR<MatriculaUpdateWithoutEscolaInput, MatriculaUncheckedUpdateWithoutEscolaInput>
    create: XOR<MatriculaCreateWithoutEscolaInput, MatriculaUncheckedCreateWithoutEscolaInput>
  }

  export type MatriculaUpdateWithWhereUniqueWithoutEscolaInput = {
    where: MatriculaWhereUniqueInput
    data: XOR<MatriculaUpdateWithoutEscolaInput, MatriculaUncheckedUpdateWithoutEscolaInput>
  }

  export type MatriculaUpdateManyWithWhereWithoutEscolaInput = {
    where: MatriculaScalarWhereInput
    data: XOR<MatriculaUpdateManyMutationInput, MatriculaUncheckedUpdateManyWithoutEscolaInput>
  }

  export type UserCreateWithoutMatriculasInput = {
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escola?: EscolaCreateNestedOneWithoutUsersInput
    escolasResponsavel?: EscolaCreateNestedManyWithoutResponsavelInput
    cursosInstrutor?: CursoCreateNestedManyWithoutInstrutorInput
  }

  export type UserUncheckedCreateWithoutMatriculasInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    escolaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escolasResponsavel?: EscolaUncheckedCreateNestedManyWithoutResponsavelInput
    cursosInstrutor?: CursoUncheckedCreateNestedManyWithoutInstrutorInput
  }

  export type UserCreateOrConnectWithoutMatriculasInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMatriculasInput, UserUncheckedCreateWithoutMatriculasInput>
  }

  export type EscolaCreateWithoutMatriculasInput = {
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    responsavel?: UserCreateNestedOneWithoutEscolasResponsavelInput
    users?: UserCreateNestedManyWithoutEscolaInput
  }

  export type EscolaUncheckedCreateWithoutMatriculasInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    responsavelId?: number | null
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    users?: UserUncheckedCreateNestedManyWithoutEscolaInput
  }

  export type EscolaCreateOrConnectWithoutMatriculasInput = {
    where: EscolaWhereUniqueInput
    create: XOR<EscolaCreateWithoutMatriculasInput, EscolaUncheckedCreateWithoutMatriculasInput>
  }

  export type UserUpsertWithoutMatriculasInput = {
    update: XOR<UserUpdateWithoutMatriculasInput, UserUncheckedUpdateWithoutMatriculasInput>
    create: XOR<UserCreateWithoutMatriculasInput, UserUncheckedCreateWithoutMatriculasInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMatriculasInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMatriculasInput, UserUncheckedUpdateWithoutMatriculasInput>
  }

  export type UserUpdateWithoutMatriculasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escola?: EscolaUpdateOneWithoutUsersNestedInput
    escolasResponsavel?: EscolaUpdateManyWithoutResponsavelNestedInput
    cursosInstrutor?: CursoUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUncheckedUpdateWithoutMatriculasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escolasResponsavel?: EscolaUncheckedUpdateManyWithoutResponsavelNestedInput
    cursosInstrutor?: CursoUncheckedUpdateManyWithoutInstrutorNestedInput
  }

  export type EscolaUpsertWithoutMatriculasInput = {
    update: XOR<EscolaUpdateWithoutMatriculasInput, EscolaUncheckedUpdateWithoutMatriculasInput>
    create: XOR<EscolaCreateWithoutMatriculasInput, EscolaUncheckedCreateWithoutMatriculasInput>
    where?: EscolaWhereInput
  }

  export type EscolaUpdateToOneWithWhereWithoutMatriculasInput = {
    where?: EscolaWhereInput
    data: XOR<EscolaUpdateWithoutMatriculasInput, EscolaUncheckedUpdateWithoutMatriculasInput>
  }

  export type EscolaUpdateWithoutMatriculasInput = {
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavel?: UserUpdateOneWithoutEscolasResponsavelNestedInput
    users?: UserUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUncheckedUpdateWithoutMatriculasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    responsavelId?: NullableIntFieldUpdateOperationsInput | number | null
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutEscolaNestedInput
  }

  export type UserCreateWithoutCursosInstrutorInput = {
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escola?: EscolaCreateNestedOneWithoutUsersInput
    escolasResponsavel?: EscolaCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaCreateNestedManyWithoutUsuarioInput
  }

  export type UserUncheckedCreateWithoutCursosInstrutorInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    escolaId?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    escolasResponsavel?: EscolaUncheckedCreateNestedManyWithoutResponsavelInput
    matriculas?: MatriculaUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UserCreateOrConnectWithoutCursosInstrutorInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCursosInstrutorInput, UserUncheckedCreateWithoutCursosInstrutorInput>
  }

  export type UserUpsertWithoutCursosInstrutorInput = {
    update: XOR<UserUpdateWithoutCursosInstrutorInput, UserUncheckedUpdateWithoutCursosInstrutorInput>
    create: XOR<UserCreateWithoutCursosInstrutorInput, UserUncheckedCreateWithoutCursosInstrutorInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCursosInstrutorInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCursosInstrutorInput, UserUncheckedUpdateWithoutCursosInstrutorInput>
  }

  export type UserUpdateWithoutCursosInstrutorInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escola?: EscolaUpdateOneWithoutUsersNestedInput
    escolasResponsavel?: EscolaUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUpdateManyWithoutUsuarioNestedInput
  }

  export type UserUncheckedUpdateWithoutCursosInstrutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escolasResponsavel?: EscolaUncheckedUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EscolaCreateManyResponsavelInput = {
    id?: number
    nome: string
    dataCadastro?: Date | string
    cidade?: string | null
    bairro?: string | null
    estado?: string | null
    rua?: string | null
    numero?: string | null
    descricao?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaCreateManyUsuarioInput = {
    id?: number
    escolaId?: number | null
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CursoCreateManyInstrutorInput = {
    id?: number
    titulo: string
    descricao?: string | null
    categoria?: string | null
    nivel?: string | null
    duracao?: string | null
    preco?: number | null
    status?: string
    dataPublicacao?: Date | string
    tags?: string | null
    arquivo?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type EscolaUpdateWithoutResponsavelInput = {
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUpdateManyWithoutEscolaNestedInput
    matriculas?: MatriculaUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUncheckedUpdateWithoutResponsavelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: UserUncheckedUpdateManyWithoutEscolaNestedInput
    matriculas?: MatriculaUncheckedUpdateManyWithoutEscolaNestedInput
  }

  export type EscolaUncheckedUpdateManyWithoutResponsavelInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    dataCadastro?: DateTimeFieldUpdateOperationsInput | Date | string
    cidade?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: NullableStringFieldUpdateOperationsInput | string | null
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    rua?: NullableStringFieldUpdateOperationsInput | string | null
    numero?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaUpdateWithoutUsuarioInput = {
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escola?: EscolaUpdateOneWithoutMatriculasNestedInput
  }

  export type MatriculaUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    escolaId?: NullableIntFieldUpdateOperationsInput | number | null
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoUpdateWithoutInstrutorInput = {
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoUncheckedUpdateWithoutInstrutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CursoUncheckedUpdateManyWithoutInstrutorInput = {
    id?: IntFieldUpdateOperationsInput | number
    titulo?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    categoria?: NullableStringFieldUpdateOperationsInput | string | null
    nivel?: NullableStringFieldUpdateOperationsInput | string | null
    duracao?: NullableStringFieldUpdateOperationsInput | string | null
    preco?: NullableFloatFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    dataPublicacao?: DateTimeFieldUpdateOperationsInput | Date | string
    tags?: NullableStringFieldUpdateOperationsInput | string | null
    arquivo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyEscolaInput = {
    id?: number
    nome: string
    email: string
    login: string
    password: string
    tipoUser: string
    rg?: string | null
    cpf: string
    dataNascimento: string
    estadoCivil?: string | null
    cnpj?: string | null
    ie?: string | null
    whatsapp?: string | null
    telefone?: string | null
    empresaAtuacao?: string | null
    profissao?: string | null
    endCidadeEstado?: string | null
    endRua?: string | null
    endNum?: string | null
    endCep?: string | null
    descricao?: string | null
    fotoPerfil?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MatriculaCreateManyEscolaInput = {
    id?: number
    usuarioId: number
    valorCurso: number
    numeroParcelas?: number | null
    valorParcela?: number | null
    valorMensalidade?: number | null
    tipoCobranca?: string
    primeiraDataPagamento?: Date | string | null
    status?: string
    nivelIdioma?: string | null
    horarioInicio?: string | null
    horarioFim?: string | null
    escolaridade?: string | null
    localNascimento?: string | null
    redeSocial?: string | null
    nomePai?: string | null
    contatoPai?: string | null
    nomeMae?: string | null
    contatoMae?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateWithoutEscolaInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escolasResponsavel?: EscolaUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUncheckedUpdateWithoutEscolaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    escolasResponsavel?: EscolaUncheckedUpdateManyWithoutResponsavelNestedInput
    matriculas?: MatriculaUncheckedUpdateManyWithoutUsuarioNestedInput
    cursosInstrutor?: CursoUncheckedUpdateManyWithoutInstrutorNestedInput
  }

  export type UserUncheckedUpdateManyWithoutEscolaInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    login?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    tipoUser?: StringFieldUpdateOperationsInput | string
    rg?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: StringFieldUpdateOperationsInput | string
    dataNascimento?: StringFieldUpdateOperationsInput | string
    estadoCivil?: NullableStringFieldUpdateOperationsInput | string | null
    cnpj?: NullableStringFieldUpdateOperationsInput | string | null
    ie?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    telefone?: NullableStringFieldUpdateOperationsInput | string | null
    empresaAtuacao?: NullableStringFieldUpdateOperationsInput | string | null
    profissao?: NullableStringFieldUpdateOperationsInput | string | null
    endCidadeEstado?: NullableStringFieldUpdateOperationsInput | string | null
    endRua?: NullableStringFieldUpdateOperationsInput | string | null
    endNum?: NullableStringFieldUpdateOperationsInput | string | null
    endCep?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    fotoPerfil?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaUpdateWithoutEscolaInput = {
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: UserUpdateOneRequiredWithoutMatriculasNestedInput
  }

  export type MatriculaUncheckedUpdateWithoutEscolaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MatriculaUncheckedUpdateManyWithoutEscolaInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuarioId?: IntFieldUpdateOperationsInput | number
    valorCurso?: FloatFieldUpdateOperationsInput | number
    numeroParcelas?: NullableIntFieldUpdateOperationsInput | number | null
    valorParcela?: NullableFloatFieldUpdateOperationsInput | number | null
    valorMensalidade?: NullableFloatFieldUpdateOperationsInput | number | null
    tipoCobranca?: StringFieldUpdateOperationsInput | string
    primeiraDataPagamento?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    nivelIdioma?: NullableStringFieldUpdateOperationsInput | string | null
    horarioInicio?: NullableStringFieldUpdateOperationsInput | string | null
    horarioFim?: NullableStringFieldUpdateOperationsInput | string | null
    escolaridade?: NullableStringFieldUpdateOperationsInput | string | null
    localNascimento?: NullableStringFieldUpdateOperationsInput | string | null
    redeSocial?: NullableStringFieldUpdateOperationsInput | string | null
    nomePai?: NullableStringFieldUpdateOperationsInput | string | null
    contatoPai?: NullableStringFieldUpdateOperationsInput | string | null
    nomeMae?: NullableStringFieldUpdateOperationsInput | string | null
    contatoMae?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}